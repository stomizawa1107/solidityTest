{
  "abi": [
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SAnswerPermit.MatchOrderArgs",
          "name": "_args",
          "type": "tuple"
        }
      ],
      "name": "matchOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "internalType": "struct SAnswerPermit.PostOrderArgs",
          "name": "_args",
          "type": "tuple"
        }
      ],
      "name": "postOrder",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "saleId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "saleList",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_currency",
          "type": "address"
        }
      ],
      "name": "setPermitCurrencyAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "setPermitNFTAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610b03806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063bbc5c2a61461005c578063e724338114610071578063e75c9618146100a1578063f413d2b6146100d1578063fe4de60c146100f7575b600080fd5b61006f61006a36600461099c565b6101a2565b005b61006f61007f3660046109d7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61006f6100af3660046109d7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6100e46100df36600461099c565b610534565b6040519081526020015b60405180910390f35b6101596101053660046109f4565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460068601546007909601546001600160a01b039586169795909416959293919260ff9091169188565b604080516001600160a01b03998a168152989097166020890152958701949094526060860192909252608085015260ff1660a084015260c083015260e0820152610100016100ee565b805160009081526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301541681840152600282015494810194909452918201546060840181905260048301546080850152600583015460ff1660a0850152600683015460c085015260079092015460e084015283015110156102865760405162461bcd60e51b815260206004820152602c60248201527f596f75206d757374207065726d6974206d6f7265206d6f6e657920746f20746860448201526b34b99031b7b73a3930b1ba1760a11b60648201526084015b60405180910390fd5b428160800151116102d95760405162461bcd60e51b815260206004820152601c60248201527f446561646c696e652068617320616c7265616479207061737365642e00000000604482015260640161027d565b60608101516002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610a0d565b10156103a75760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520656e6f756768206d6f6e657920746f20626044820152653abc9034ba1760d11b606482015260840161027d565b60025460208301516040808501516060860151608087015160a0880151935163d505accf60e01b81526001600160a01b039096169563d505accf956103f9953395309592949093909190600401610a26565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050600254835160608501516040516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810191909152911692506323b872dd91506064016020604051808303816000875af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190610a67565b50600154815160408084015190516323b872dd60e01b81526001600160a01b03928316600482015233602482015260448101919091529116906323b872dd90606401600060405180830381600087803b15801561050b57600080fd5b505af115801561051f573d6000803e3d6000fd5b505050506105308160400151610871565b5050565b60015481516040516331a9108f60e11b815260048101919091526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190610a89565b6001600160a01b0316336001600160a01b0316146106055760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f7420746f6b656e206f776e65722e000000000000604482015260640161027d565b6040805161010081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820152600154845192516331a9108f60e11b8152600481019390935290916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b49190610a89565b6001600160a01b03908116825230602080840191825285516040808601918252878301516060808801918252828a01516080808a01918252918b015160ff90811660a0808c01918252938d015160c08c01908152938d015160e08c019081526000805481526003998a90528790208c5181546001600160a01b0319908116918e169190911782559a5160018083018054909d16918e1691909117909b559751600289018190559551988801989098559151600480880191909155915160058701805460ff191691909216179055905160068501559351600790930192909255925492516331a9108f60e11b81529182015291169063d505accf908290636352211e90602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190610a89565b30846040015185608001518660a001518760c001518860e001516040518863ffffffff1660e01b81526004016108369796959493929190610a26565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b5050505050505060005490565b60005b600081815260036020526040902060020154821461089e578061089681610aa6565b915050610874565b6000908152600360208190526040822080546001600160a01b031990811682556001820180549091169055600281018390559081018290556004810182905560058101805460ff19169055600681018290556007015550565b803560ff8116811461090857600080fd5b919050565b600060c0828403121561091f57600080fd5b60405160c0810181811067ffffffffffffffff8211171561095057634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015261097c606084016108f7565b60608201526080830135608082015260a083013560a08201525092915050565b600060c082840312156109ae57600080fd5b6109b8838361090d565b9392505050565b6001600160a01b03811681146109d457600080fd5b50565b6000602082840312156109e957600080fd5b81356109b8816109bf565b600060208284031215610a0657600080fd5b5035919050565b600060208284031215610a1f57600080fd5b5051919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b600060208284031215610a7957600080fd5b815180151581146109b857600080fd5b600060208284031215610a9b57600080fd5b81516109b8816109bf565b600060018201610ac657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220b53868e017445926187c88441de1e8c85a7ff8068ab2208129776ea946d043a864736f6c63430008130033",
    "sourceMap": "451:3904:13:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063bbc5c2a61461005c578063e724338114610071578063e75c9618146100a1578063f413d2b6146100d1578063fe4de60c146100f7575b600080fd5b61006f61006a36600461099c565b6101a2565b005b61006f61007f3660046109d7565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b61006f6100af3660046109d7565b600280546001600160a01b0319166001600160a01b0392909216919091179055565b6100e46100df36600461099c565b610534565b6040519081526020015b60405180910390f35b6101596101053660046109f4565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460068601546007909601546001600160a01b039586169795909416959293919260ff9091169188565b604080516001600160a01b03998a168152989097166020890152958701949094526060860192909252608085015260ff1660a084015260c083015260e0820152610100016100ee565b805160009081526003602081815260409283902083516101008101855281546001600160a01b03908116825260018301541681840152600282015494810194909452918201546060840181905260048301546080850152600583015460ff1660a0850152600683015460c085015260079092015460e084015283015110156102865760405162461bcd60e51b815260206004820152602c60248201527f596f75206d757374207065726d6974206d6f7265206d6f6e657920746f20746860448201526b34b99031b7b73a3930b1ba1760a11b60648201526084015b60405180910390fd5b428160800151116102d95760405162461bcd60e51b815260206004820152601c60248201527f446561646c696e652068617320616c7265616479207061737365642e00000000604482015260640161027d565b60608101516002546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa158015610326573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034a9190610a0d565b10156103a75760405162461bcd60e51b815260206004820152602660248201527f596f7520646f6e2774206861766520656e6f756768206d6f6e657920746f20626044820152653abc9034ba1760d11b606482015260840161027d565b60025460208301516040808501516060860151608087015160a0880151935163d505accf60e01b81526001600160a01b039096169563d505accf956103f9953395309592949093909190600401610a26565b600060405180830381600087803b15801561041357600080fd5b505af1158015610427573d6000803e3d6000fd5b5050600254835160608501516040516323b872dd60e01b81523360048201526001600160a01b0392831660248201526044810191909152911692506323b872dd91506064016020604051808303816000875af115801561048b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104af9190610a67565b50600154815160408084015190516323b872dd60e01b81526001600160a01b03928316600482015233602482015260448101919091529116906323b872dd90606401600060405180830381600087803b15801561050b57600080fd5b505af115801561051f573d6000803e3d6000fd5b505050506105308160400151610871565b5050565b60015481516040516331a9108f60e11b815260048101919091526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610581573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a59190610a89565b6001600160a01b0316336001600160a01b0316146106055760405162461bcd60e51b815260206004820152601a60248201527f43616c6c6572206973206e6f7420746f6b656e206f776e65722e000000000000604482015260640161027d565b6040805161010081018252600080825260208201819052818301819052606082018190526080820181905260a0820181905260c0820181905260e0820152600154845192516331a9108f60e11b8152600481019390935290916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610690573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b49190610a89565b6001600160a01b03908116825230602080840191825285516040808601918252878301516060808801918252828a01516080808a01918252918b015160ff90811660a0808c01918252938d015160c08c01908152938d015160e08c019081526000805481526003998a90528790208c5181546001600160a01b0319908116918e169190911782559a5160018083018054909d16918e1691909117909b559751600289018190559551988801989098559151600480880191909155915160058701805460ff191691909216179055905160068501559351600790930192909255925492516331a9108f60e11b81529182015291169063d505accf908290636352211e90602401602060405180830381865afa1580156107d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107fa9190610a89565b30846040015185608001518660a001518760c001518860e001516040518863ffffffff1660e01b81526004016108369796959493929190610a26565b600060405180830381600087803b15801561085057600080fd5b505af1158015610864573d6000803e3d6000fd5b5050505050505060005490565b60005b600081815260036020526040902060020154821461089e578061089681610aa6565b915050610874565b6000908152600360208190526040822080546001600160a01b031990811682556001820180549091169055600281018390559081018290556004810182905560058101805460ff19169055600681018290556007015550565b803560ff8116811461090857600080fd5b919050565b600060c0828403121561091f57600080fd5b60405160c0810181811067ffffffffffffffff8211171561095057634e487b7160e01b600052604160045260246000fd5b806040525080915082358152602083013560208201526040830135604082015261097c606084016108f7565b60608201526080830135608082015260a083013560a08201525092915050565b600060c082840312156109ae57600080fd5b6109b8838361090d565b9392505050565b6001600160a01b03811681146109d457600080fd5b50565b6000602082840312156109e957600080fd5b81356109b8816109bf565b600060208284031215610a0657600080fd5b5035919050565b600060208284031215610a1f57600080fd5b5051919050565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b600060208284031215610a7957600080fd5b815180151581146109b857600080fd5b600060208284031215610a9b57600080fd5b81516109b8816109bf565b600060018201610ac657634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220b53868e017445926187c88441de1e8c85a7ff8068ab2208129776ea946d043a864736f6c63430008130033",
    "sourceMap": "451:3904:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2701:1143;;;;;;:::i;:::-;;:::i;:::-;;1004:151;;;;;;:::i;:::-;1105:9;:43;;-1:-1:-1;;;;;;1105:43:13;-1:-1:-1;;;;;1105:43:13;;;;;;;;;;1004:151;1238:186;;;;;;:::i;:::-;1359:14;:58;;-1:-1:-1;;;;;;1359:58:13;-1:-1:-1;;;;;1359:58:13;;;;;;;;;;1238:186;1623:1007;;;;;;:::i;:::-;;:::i;:::-;;;2055:25:66;;;2043:2;2028:18;1623:1007:13;;;;;;;;1505:58;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1505:58:13;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2671:15:66;;;2653:34;;2723:15;;;;2718:2;2703:18;;2696:43;2755:18;;;2748:34;;;;2813:2;2798:18;;2791:34;;;;2856:3;2841:19;;2834:35;2918:4;2906:17;2633:3;2885:19;;2878:46;2955:3;2940:19;;2933:35;2999:3;2984:19;;2977:35;2602:3;2587:19;1505:58:13;2276:742:66;2701:1143:13;2854:12;;2808:34;2845:22;;;:8;:22;;;;;;;;;2808:59;;;;;;;;;-1:-1:-1;;;;;2808:59:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2893:12;;;-1:-1:-1;2877:961:13;;;2930:54;;-1:-1:-1;;;2930:54:13;;3225:2:66;2930:54:13;;;3207:21:66;3264:2;3244:18;;;3237:30;3303:34;3283:18;;;3276:62;-1:-1:-1;;;3354:18:66;;;3347:42;3406:19;;2930:54:13;;;;;;;;2877:961;3029:15;3012:4;:13;;;:32;3009:829;;3068:38;;-1:-1:-1;;;3068:38:13;;3638:2:66;3068:38:13;;;3620:21:66;3677:2;3657:18;;;3650:30;3716;3696:18;;;3689:58;3764:18;;3068:38:13;3436:352:66;3009:829:13;3175:10;;;;3135:14;;:36;;-1:-1:-1;;;3135:36:13;;3160:10;3135:36;;;3939:51:66;-1:-1:-1;;;;;3135:14:13;;;;:24;;3912:18:66;;3135:36:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;3131:707;;;3210:48;;-1:-1:-1;;;3210:48:13;;4392:2:66;3210:48:13;;;4374:21:66;4431:2;4411:18;;;4404:30;4470:34;4450:18;;;4443:62;-1:-1:-1;;;4521:18:66;;;4514:36;4567:19;;3210:48:13;4190:402:66;3131:707:13;3377:14;;3424:12;;;;3438:14;;;;;3453:7;;;;3461;;;;3469;;;;3377:100;;-1:-1:-1;;;3377:100:13;;-1:-1:-1;;;;;3377:14:13;;;;:21;;:100;;3399:10;;3418:4;;3424:12;;3438:14;;3461:7;;3469;3377:100;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3548:14:13;;3587:10;;3599;;;;3548:62;;-1:-1:-1;;;3548:62:13;;3576:10;3548:62;;;5512:34:66;-1:-1:-1;;;;;5582:15:66;;;5562:18;;;5555:43;5614:18;;;5607:34;;;;3548:14:13;;;-1:-1:-1;3548:27:13;;-1:-1:-1;5447:18:66;;3548:62:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3672:9:13;;3695:10;;3719:12;;;;;3672:61;;-1:-1:-1;;;3672:61:13;;-1:-1:-1;;;;;5530:15:66;;;3672:61:13;;;5512:34:66;3707:10:13;5562:18:66;;;5555:43;5614:18;;;5607:34;;;;3672:9:13;;;:22;;5447:18:66;;3672:61:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:25;3814:4;:12;;;3802:11;:25::i;:::-;2773:1071;2701:1143;:::o;1623:1007::-;1791:9;;1809:13;;1791:32;;-1:-1:-1;;;1791:32:13;;;;;2055:25:66;;;;1702:14:13;;-1:-1:-1;;;;;1791:9:13;;:17;;2028:18:66;;1791:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1777:46:13;:10;-1:-1:-1;;;;;1777:46:13;;1774:828;;1847:36;;-1:-1:-1;;;1847:36:13;;6392:2:66;1847:36:13;;;6374:21:66;6431:2;6411:18;;;6404:30;6470:28;6450:18;;;6443:56;6516:18;;1847:36:13;6190:350:66;1774:828:13;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:9:13;;2009:13;;1991:32;;-1:-1:-1;;;1991:32:13;;;;;2055:25:66;;;;-1:-1:-1;;;;;;;1991:9:13;;;;:17;;2028:18:66;;1991:32:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1978:45:13;;;;;2129:4;2106:12;;;;:28;;;2163:13;;2148:12;;;;:28;;;2203:11;;;;2190:10;;;;:24;;;2244:14;;;;2228:13;;;;:30;;;2281:7;;;;2272:16;;;;:6;;;;:16;;;2311:7;;;;2302:6;;;:16;;;2341:7;;;;2332:6;;;:16;;;-1:-1:-1;2371:5:13;;2362:15;;:8;:15;;;;;;;:22;;;;-1:-1:-1;;;;;;2362:22:13;;;;;;;;;;;;;;-1:-1:-1;2362:22:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2362:22:13;;;;;;;;;;;;;;;;;;;;;;;;2479:9;;2496:31;;-1:-1:-1;;;2496:31:13;;;;;2055:25:66;2479:9:13;;;:16;;:9;;2496:17;;2028:18:66;;2496:31:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2536:4;2542;:12;;;2556:4;:13;;;2570:4;:6;;;2577:4;:6;;;2584:4;:6;;;2479:112;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1916:686;-1:-1:-1;;2618:5:13;;;1623:1007::o;3933:420::-;4017:12;4095:218;4132:17;;;;:8;:17;;;;;:25;;;4129:151;;4244:5;4129:151;4293:9;;;;:::i;:::-;;;;4095:218;;;4329:17;;;;:8;:17;;;;;;;4322:24;;-1:-1:-1;;;;;;4322:24:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4322:24:13;;;;;;;;;;;;-1:-1:-1;3933:420:13:o;14:156:66:-;80:20;;140:4;129:16;;119:27;;109:55;;160:1;157;150:12;109:55;14:156;;;:::o;175:848::-;236:5;284:4;272:9;267:3;263:19;259:30;256:50;;;302:1;299;292:12;256:50;335:2;329:9;377:4;369:6;365:17;448:6;436:10;433:22;412:18;400:10;397:34;394:62;391:185;;;498:10;493:3;489:20;486:1;479:31;533:4;530:1;523:15;561:4;558:1;551:15;391:185;596:10;592:2;585:22;;625:6;616:15;;668:9;655:23;647:6;640:39;740:2;729:9;725:18;712:32;707:2;699:6;695:15;688:57;806:2;795:9;791:18;778:32;773:2;765:6;761:15;754:57;844:36;876:2;865:9;861:18;844:36;:::i;:::-;839:2;831:6;827:15;820:61;943:3;932:9;928:19;915:33;909:3;901:6;897:16;890:59;1011:3;1000:9;996:19;983:33;977:3;969:6;965:16;958:59;;175:848;;;;:::o;1028:242::-;1119:6;1172:3;1160:9;1151:7;1147:23;1143:33;1140:53;;;1189:1;1186;1179:12;1140:53;1212:52;1256:7;1245:9;1212:52;:::i;:::-;1202:62;1028:242;-1:-1:-1;;;1028:242:66:o;1275:131::-;-1:-1:-1;;;;;1350:31:66;;1340:42;;1330:70;;1396:1;1393;1386:12;1330:70;1275:131;:::o;1411:247::-;1470:6;1523:2;1511:9;1502:7;1498:23;1494:32;1491:52;;;1539:1;1536;1529:12;1491:52;1578:9;1565:23;1597:31;1622:5;1597:31;:::i;2091:180::-;2150:6;2203:2;2191:9;2182:7;2178:23;2174:32;2171:52;;;2219:1;2216;2209:12;2171:52;-1:-1:-1;2242:23:66;;2091:180;-1:-1:-1;2091:180:66:o;4001:184::-;4071:6;4124:2;4112:9;4103:7;4099:23;4095:32;4092:52;;;4140:1;4137;4130:12;4092:52;-1:-1:-1;4163:16:66;;4001:184;-1:-1:-1;4001:184:66:o;4597:670::-;-1:-1:-1;;;;;4964:15:66;;;4946:34;;5016:15;;;;5011:2;4996:18;;4989:43;5063:2;5048:18;;5041:34;;;;5106:2;5091:18;;5084:34;;;;5167:4;5155:17;5149:3;5134:19;;5127:46;4926:3;5189:19;;5182:35;5248:3;5233:19;;5226:35;;;;4895:3;4880:19;;4597:670::o;5652:277::-;5719:6;5772:2;5760:9;5751:7;5747:23;5743:32;5740:52;;;5788:1;5785;5778:12;5740:52;5820:9;5814:16;5873:5;5866:13;5859:21;5852:5;5849:32;5839:60;;5895:1;5892;5885:12;5934:251;6004:6;6057:2;6045:9;6036:7;6032:23;6028:32;6025:52;;;6073:1;6070;6063:12;6025:52;6105:9;6099:16;6124:31;6149:5;6124:31;:::i;6545:232::-;6584:3;6605:17;;;6602:140;;6664:10;6659:3;6655:20;6652:1;6645:31;6699:4;6696:1;6689:15;6727:4;6724:1;6717:15;6602:140;-1:-1:-1;6769:1:66;6758:13;;6545:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "matchOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))": "bbc5c2a6",
    "postOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))": "f413d2b6",
    "saleList(uint256)": "fe4de60c",
    "setPermitCurrencyAddress(address)": "e75c9618",
    "setPermitNFTAddress(address)": "e7243381"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SAnswerPermit.MatchOrderArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"name\":\"matchOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"internalType\":\"struct SAnswerPermit.PostOrderArgs\",\"name\":\"_args\",\"type\":\"tuple\"}],\"name\":\"postOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"saleId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"saleList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_currency\",\"type\":\"address\"}],\"name\":\"setPermitCurrencyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setPermitNFTAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"matchOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"details\":\"\\u5e0c\\u671b\\u3059\\u308bNFT\\u3092\\u8cfc\\u5165\\u3059\\u308b\\u95a2\\u6570\"},\"postOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))\":{\"details\":\"NFT\\u3092\\u51fa\\u54c1\\u3059\\u308b\\u95a2\\u6570\"},\"setPermitCurrencyAddress(address)\":{\"details\":\"Permit\\u7528\\u306eCurrencyAddress\\u3092\\u8a2d\\u5b9a\\u3059\\u308b\\u95a2\\u6570\"},\"setPermitNFTAddress(address)\":{\"details\":\"Permit\\u7528\\u306eNFTAddress\\u3092\\u8a2d\\u5b9a\\u3059\\u308b\\u95a2\\u6570\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/A6/AnswerPermit.sol\":\"AnswerPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=util/lib/openzeppelin-contracts/\",\":ds-test/=util/lib/forge-std/lib/ds-test/src/\",\":forge-std/=util/lib/forge-std/src/\",\":openzeppelin-contracts/=util/lib/openzeppelin-contracts/\",\":scal-std/=util/lib/scal-std/src/\",\":src/=contracts/src/\",\":test/=test/\"]},\"sources\":{\"contracts/src/A6/AnswerPermit.sol\":{\"keccak256\":\"0x5dfe230c72578cedafa3e86e20749980eda85c0bb72847f3618a84ff965d9906\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2acbf143008dd5409ed3a38ad6c60ec7ecaa6ebae59a1aed30de6abaefc0c02d\",\"dweb:/ipfs/QmPhCjTGCEL9C69UUPmVcVaguK7KMdPDYkTnZAgzngyh8C\"]},\"contracts/src/A6/interfaces/IAnswerPermit.sol\":{\"keccak256\":\"0x12a2529ad4d2256f036bd8d6b337a74748d53bafc815481d1140d629039101e6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1c12f43e40070906be70e445391ab957131a5f09e6876578d50177e02d63f71\",\"dweb:/ipfs/QmeEki8amffRSZbRmvsXnDRV4k2RHxjzqGm1YuQkmPHZNd\"]},\"contracts/src/A6/interfaces/IERC721Permit.sol\":{\"keccak256\":\"0xf2120826338b9428d40d2b16af23d0d8a470d4e17c4e917003750ee7ca7cf371\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3b15074bf99622284a6961956d565d4969e2d407df93f55c460798d8b9777aef\",\"dweb:/ipfs/QmTmQm34ofHzuM81VYKSkiweoSXKeZ4QRtsFtYCAJa13Ck\"]},\"contracts/src/A6/interfaces/SAnswerPermit.sol\":{\"keccak256\":\"0x27ea62173dcaf791b4c31ac663e9aee4b8557426bd68b9a65c7372f4eb872ad0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://72932cd564c32f622aa28594c9a3c85b3b4de76c6ef591f2628282207ef5b55a\",\"dweb:/ipfs/QmRpTmqncJwAkw5usdga5JCTrJNV7VwBcxpV4zbAE2Jqxe\"]},\"contracts/src/A6/utils//ERC721Permit.sol\":{\"keccak256\":\"0xdb4d0cb3d89e19b395f904904d0ba2689470599b494ab9a70d6177ce580a9f21\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://489ce09b9d7b6b4b73f6c52ed6f39ff48a3244897c9b4c69305eb6e436c21c1e\",\"dweb:/ipfs/QmYKqGLbvx9rn7a63S5eJH3K8LmL1YKigB8VQ274a91X1a\"]},\"contracts/src/A6/utils/YourCurrencyPermit.sol\":{\"keccak256\":\"0x547ea5a7cf6969b6ca79f786c94fbdf3b68f02d0e9a34ffa1a7e1c8f6a53ef17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c0767292e0e4f0cfa458cc3db2f246d48a8d182fe597e1aaa25b9077812891f\",\"dweb:/ipfs/QmbH2rC9kdrTH8qzDb9s3F3SWXhANzKsUU2H8QkCjs6WoG\"]},\"contracts/src/A6/utils/YourNFTPermit.sol\":{\"keccak256\":\"0xfdeb31e295974f4a42e63853e02de7c39c4be9bc4dc6660733419295aef45152\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5edff0a8aaa06f6c5b77d813c9ae9efaf79917fff21400e0aad84a91d1ac42e0\",\"dweb:/ipfs/QmcbcjGGMmbfPps9WACfsM8EyWpMpuRb4Ua7sW25znDUo8\"]},\"util/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"util/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"util/lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"util/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct SAnswerPermit.MatchOrderArgs",
              "name": "_args",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "saleId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "matchOrder"
        },
        {
          "inputs": [
            {
              "internalType": "struct SAnswerPermit.PostOrderArgs",
              "name": "_args",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "tokenId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "price",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "deadline",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "v",
                  "type": "uint8"
                },
                {
                  "internalType": "bytes32",
                  "name": "r",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "s",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "postOrder",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "saleId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "saleList",
          "outputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_currency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermitCurrencyAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nft",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setPermitNFTAddress"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "matchOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "details": "希望するNFTを購入する関数"
          },
          "postOrder((uint256,uint256,uint256,uint8,bytes32,bytes32))": {
            "details": "NFTを出品する関数"
          },
          "setPermitCurrencyAddress(address)": {
            "details": "Permit用のCurrencyAddressを設定する関数"
          },
          "setPermitNFTAddress(address)": {
            "details": "Permit用のNFTAddressを設定する関数"
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=util/lib/openzeppelin-contracts/",
        ":ds-test/=util/lib/forge-std/lib/ds-test/src/",
        ":forge-std/=util/lib/forge-std/src/",
        ":openzeppelin-contracts/=util/lib/openzeppelin-contracts/",
        ":scal-std/=util/lib/scal-std/src/",
        ":src/=contracts/src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/A6/AnswerPermit.sol": "AnswerPermit"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/A6/AnswerPermit.sol": {
        "keccak256": "0x5dfe230c72578cedafa3e86e20749980eda85c0bb72847f3618a84ff965d9906",
        "urls": [
          "bzz-raw://2acbf143008dd5409ed3a38ad6c60ec7ecaa6ebae59a1aed30de6abaefc0c02d",
          "dweb:/ipfs/QmPhCjTGCEL9C69UUPmVcVaguK7KMdPDYkTnZAgzngyh8C"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/interfaces/IAnswerPermit.sol": {
        "keccak256": "0x12a2529ad4d2256f036bd8d6b337a74748d53bafc815481d1140d629039101e6",
        "urls": [
          "bzz-raw://c1c12f43e40070906be70e445391ab957131a5f09e6876578d50177e02d63f71",
          "dweb:/ipfs/QmeEki8amffRSZbRmvsXnDRV4k2RHxjzqGm1YuQkmPHZNd"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/interfaces/IERC721Permit.sol": {
        "keccak256": "0xf2120826338b9428d40d2b16af23d0d8a470d4e17c4e917003750ee7ca7cf371",
        "urls": [
          "bzz-raw://3b15074bf99622284a6961956d565d4969e2d407df93f55c460798d8b9777aef",
          "dweb:/ipfs/QmTmQm34ofHzuM81VYKSkiweoSXKeZ4QRtsFtYCAJa13Ck"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/interfaces/SAnswerPermit.sol": {
        "keccak256": "0x27ea62173dcaf791b4c31ac663e9aee4b8557426bd68b9a65c7372f4eb872ad0",
        "urls": [
          "bzz-raw://72932cd564c32f622aa28594c9a3c85b3b4de76c6ef591f2628282207ef5b55a",
          "dweb:/ipfs/QmRpTmqncJwAkw5usdga5JCTrJNV7VwBcxpV4zbAE2Jqxe"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/utils//ERC721Permit.sol": {
        "keccak256": "0xdb4d0cb3d89e19b395f904904d0ba2689470599b494ab9a70d6177ce580a9f21",
        "urls": [
          "bzz-raw://489ce09b9d7b6b4b73f6c52ed6f39ff48a3244897c9b4c69305eb6e436c21c1e",
          "dweb:/ipfs/QmYKqGLbvx9rn7a63S5eJH3K8LmL1YKigB8VQ274a91X1a"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/utils/YourCurrencyPermit.sol": {
        "keccak256": "0x547ea5a7cf6969b6ca79f786c94fbdf3b68f02d0e9a34ffa1a7e1c8f6a53ef17",
        "urls": [
          "bzz-raw://1c0767292e0e4f0cfa458cc3db2f246d48a8d182fe597e1aaa25b9077812891f",
          "dweb:/ipfs/QmbH2rC9kdrTH8qzDb9s3F3SWXhANzKsUU2H8QkCjs6WoG"
        ],
        "license": "MIT"
      },
      "contracts/src/A6/utils/YourNFTPermit.sol": {
        "keccak256": "0xfdeb31e295974f4a42e63853e02de7c39c4be9bc4dc6660733419295aef45152",
        "urls": [
          "bzz-raw://5edff0a8aaa06f6c5b77d813c9ae9efaf79917fff21400e0aad84a91d1ac42e0",
          "dweb:/ipfs/QmcbcjGGMmbfPps9WACfsM8EyWpMpuRb4Ua7sW25znDUo8"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/A6/AnswerPermit.sol",
    "id": 900,
    "exportedSymbols": {
      "AnswerPermit": [
        899
      ],
      "IAnswerPermit": [
        928
      ],
      "IERC165": [
        35013
      ],
      "IERC20": [
        32540
      ],
      "IERC721": [
        33816
      ],
      "SAnswerPermit": [
        1052
      ],
      "YourCurrencyPermit": [
        1280
      ],
      "YourNFTPermit": [
        1344
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4323:13",
    "nodes": [
      {
        "id": 576,
        "nodeType": "PragmaDirective",
        "src": "32:24:13",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 577,
        "nodeType": "ImportDirective",
        "src": "58:58:13",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 33817,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 578,
        "nodeType": "ImportDirective",
        "src": "117:56:13",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 32541,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 580,
        "nodeType": "ImportDirective",
        "src": "174:63:13",
        "nodes": [],
        "absolutePath": "contracts/src/A6/utils/YourNFTPermit.sol",
        "file": "src/A6/utils/YourNFTPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 1345,
        "symbolAliases": [
          {
            "foreign": {
              "id": 579,
              "name": "YourNFTPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1344,
              "src": "183:13:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 582,
        "nodeType": "ImportDirective",
        "src": "238:73:13",
        "nodes": [],
        "absolutePath": "contracts/src/A6/utils/YourCurrencyPermit.sol",
        "file": "src/A6/utils/YourCurrencyPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 1281,
        "symbolAliases": [
          {
            "foreign": {
              "id": 581,
              "name": "YourCurrencyPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1280,
              "src": "247:18:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 584,
        "nodeType": "ImportDirective",
        "src": "312:68:13",
        "nodes": [],
        "absolutePath": "contracts/src/A6/interfaces/SAnswerPermit.sol",
        "file": "src/A6/interfaces/SAnswerPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 1053,
        "symbolAliases": [
          {
            "foreign": {
              "id": 583,
              "name": "SAnswerPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1052,
              "src": "321:13:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 586,
        "nodeType": "ImportDirective",
        "src": "381:68:13",
        "nodes": [],
        "absolutePath": "contracts/src/A6/interfaces/IAnswerPermit.sol",
        "file": "src/A6/interfaces/IAnswerPermit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 900,
        "sourceUnit": 929,
        "symbolAliases": [
          {
            "foreign": {
              "id": 585,
              "name": "IAnswerPermit",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 928,
              "src": "390:13:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 899,
        "nodeType": "ContractDefinition",
        "src": "451:3904:13",
        "nodes": [
          {
            "id": 591,
            "nodeType": "VariableDeclaration",
            "src": "840:13:13",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 589,
              "nodeType": "StructuredDocumentation",
              "src": "496:339:13",
              "text": "Q-6. Permitを試す\nEIP-2612（Permit）について：https://eips.ethereum.org/EIPS/eip-2612\nEIP-2612はERC20でPermitを利用するという提案であり、これを理解したうえで使用する問である。\nシナリオ：ERC20、ERC721でPermitを利用して、NFTを売買する"
            },
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "848:5:13",
            "scope": 899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 590,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "840:7:13",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 594,
            "nodeType": "VariableDeclaration",
            "src": "859:23:13",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "nftPermit",
            "nameLocation": "873:9:13",
            "scope": 899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
              "typeString": "contract YourNFTPermit"
            },
            "typeName": {
              "id": 593,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 592,
                "name": "YourNFTPermit",
                "nameLocations": [
                  "859:13:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1344,
                "src": "859:13:13"
              },
              "referencedDeclaration": 1344,
              "src": "859:13:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                "typeString": "contract YourNFTPermit"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 597,
            "nodeType": "VariableDeclaration",
            "src": "888:33:13",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "currencyPermit",
            "nameLocation": "907:14:13",
            "scope": 899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
              "typeString": "contract YourCurrencyPermit"
            },
            "typeName": {
              "id": 596,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 595,
                "name": "YourCurrencyPermit",
                "nameLocations": [
                  "888:18:13"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1280,
                "src": "888:18:13"
              },
              "referencedDeclaration": 1280,
              "src": "888:18:13",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                "typeString": "contract YourCurrencyPermit"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 614,
            "nodeType": "FunctionDefinition",
            "src": "1004:151:13",
            "nodes": [],
            "body": {
              "id": 613,
              "nodeType": "Block",
              "src": "1054:101:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    604
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 604,
                      "mutability": "mutable",
                      "name": "permitNFTAddress",
                      "nameLocation": "1072:16:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 613,
                      "src": "1064:24:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 603,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1064:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 606,
                  "initialValue": {
                    "id": 605,
                    "name": "_nft",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 600,
                    "src": "1091:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1064:31:13"
                },
                {
                  "expression": {
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 607,
                      "name": "nftPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 594,
                      "src": "1105:9:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                        "typeString": "contract YourNFTPermit"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 609,
                          "name": "permitNFTAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 604,
                          "src": "1131:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 608,
                        "name": "YourNFTPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1344,
                        "src": "1117:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_YourNFTPermit_$1344_$",
                          "typeString": "type(contract YourNFTPermit)"
                        }
                      },
                      "id": 610,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1117:31:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                        "typeString": "contract YourNFTPermit"
                      }
                    },
                    "src": "1105:43:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                      "typeString": "contract YourNFTPermit"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:43:13"
                }
              ]
            },
            "baseFunctions": [
              908
            ],
            "documentation": {
              "id": 598,
              "nodeType": "StructuredDocumentation",
              "src": "932:67:13",
              "text": " @dev Permit用のNFTAddressを設定する関数"
            },
            "functionSelector": "e7243381",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPermitNFTAddress",
            "nameLocation": "1013:19:13",
            "parameters": {
              "id": 601,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 600,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "1041:4:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 614,
                  "src": "1033:12:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 599,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1033:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1032:14:13"
            },
            "returnParameters": {
              "id": 602,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1054:0:13"
            },
            "scope": 899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 631,
            "nodeType": "FunctionDefinition",
            "src": "1238:186:13",
            "nodes": [],
            "body": {
              "id": 630,
              "nodeType": "Block",
              "src": "1298:126:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    621
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 621,
                      "mutability": "mutable",
                      "name": "permitCurrencyAddress",
                      "nameLocation": "1316:21:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 630,
                      "src": "1308:29:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 620,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1308:7:13",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 623,
                  "initialValue": {
                    "id": 622,
                    "name": "_currency",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 617,
                    "src": "1340:9:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1308:41:13"
                },
                {
                  "expression": {
                    "id": 628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 624,
                      "name": "currencyPermit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 597,
                      "src": "1359:14:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                        "typeString": "contract YourCurrencyPermit"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 626,
                          "name": "permitCurrencyAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 621,
                          "src": "1395:21:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 625,
                        "name": "YourCurrencyPermit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1280,
                        "src": "1376:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_YourCurrencyPermit_$1280_$",
                          "typeString": "type(contract YourCurrencyPermit)"
                        }
                      },
                      "id": 627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1376:41:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                        "typeString": "contract YourCurrencyPermit"
                      }
                    },
                    "src": "1359:58:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                      "typeString": "contract YourCurrencyPermit"
                    }
                  },
                  "id": 629,
                  "nodeType": "ExpressionStatement",
                  "src": "1359:58:13"
                }
              ]
            },
            "baseFunctions": [
              913
            ],
            "documentation": {
              "id": 615,
              "nodeType": "StructuredDocumentation",
              "src": "1161:72:13",
              "text": " @dev Permit用のCurrencyAddressを設定する関数"
            },
            "functionSelector": "e75c9618",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setPermitCurrencyAddress",
            "nameLocation": "1247:24:13",
            "parameters": {
              "id": 618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 617,
                  "mutability": "mutable",
                  "name": "_currency",
                  "nameLocation": "1280:9:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 631,
                  "src": "1272:17:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 616,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1272:7:13",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1271:19:13"
            },
            "returnParameters": {
              "id": 619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1298:0:13"
            },
            "scope": 899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 636,
            "nodeType": "VariableDeclaration",
            "src": "1505:58:13",
            "nodes": [],
            "constant": false,
            "functionSelector": "fe4de60c",
            "mutability": "mutable",
            "name": "saleList",
            "nameLocation": "1555:8:13",
            "scope": 899,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
              "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo)"
            },
            "typeName": {
              "id": 635,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 632,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1513:7:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1505:42:13",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
                "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 634,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 633,
                  "name": "SAnswerPermit.SaleInfo",
                  "nameLocations": [
                    "1524:13:13",
                    "1538:8:13"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 989,
                  "src": "1524:22:13"
                },
                "referencedDeclaration": 989,
                "src": "1524:22:13",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SaleInfo_$989_storage_ptr",
                  "typeString": "struct SAnswerPermit.SaleInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 764,
            "nodeType": "FunctionDefinition",
            "src": "1623:1007:13",
            "nodes": [],
            "body": {
              "id": 763,
              "nodeType": "Block",
              "src": "1718:912:13",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 645,
                      "name": "saleId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 643,
                      "src": "1754:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1763:1:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1754:10:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "1754:10:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 649,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1777:3:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1781:6:13",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1777:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 653,
                            "name": "_args",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 640,
                            "src": "1809:5:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                              "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                            }
                          },
                          "id": 654,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1815:7:13",
                          "memberName": "tokenId",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1027,
                          "src": "1809:13:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 651,
                          "name": "nftPermit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 594,
                          "src": "1791:9:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                            "typeString": "contract YourNFTPermit"
                          }
                        },
                        "id": 652,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1801:7:13",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32919,
                        "src": "1791:17:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1791:32:13",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1777:46:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 759,
                    "nodeType": "Block",
                    "src": "1916:686:13",
                    "statements": [
                      {
                        "assignments": [
                          666
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 666,
                            "mutability": "mutable",
                            "name": "info",
                            "nameLocation": "1960:4:13",
                            "nodeType": "VariableDeclaration",
                            "scope": 759,
                            "src": "1930:34:13",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                              "typeString": "struct SAnswerPermit.SaleInfo"
                            },
                            "typeName": {
                              "id": 665,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 664,
                                "name": "SAnswerPermit.SaleInfo",
                                "nameLocations": [
                                  "1930:13:13",
                                  "1944:8:13"
                                ],
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 989,
                                "src": "1930:22:13"
                              },
                              "referencedDeclaration": 989,
                              "src": "1930:22:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_storage_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 667,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1930:34:13"
                      },
                      {
                        "expression": {
                          "id": 676,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 668,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "1978:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 670,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "1983:5:13",
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 974,
                            "src": "1978:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 673,
                                  "name": "_args",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 640,
                                  "src": "2009:5:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                    "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                                  }
                                },
                                "id": 674,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2015:7:13",
                                "memberName": "tokenId",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1027,
                                "src": "2009:13:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 671,
                                "name": "nftPermit",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 594,
                                "src": "1991:9:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                                  "typeString": "contract YourNFTPermit"
                                }
                              },
                              "id": 672,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2001:7:13",
                              "memberName": "ownerOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 32919,
                              "src": "1991:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                "typeString": "function (uint256) view external returns (address)"
                              }
                            },
                            "id": 675,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1991:32:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1978:45:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 677,
                        "nodeType": "ExpressionStatement",
                        "src": "1978:45:13"
                      },
                      {
                        "expression": {
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 678,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2106:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 680,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2111:7:13",
                            "memberName": "spender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 976,
                            "src": "2106:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 683,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2129:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                  "typeString": "contract AnswerPermit"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                  "typeString": "contract AnswerPermit"
                                }
                              ],
                              "id": 682,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2121:7:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 681,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2121:7:13",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 684,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2121:13:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2106:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 686,
                        "nodeType": "ExpressionStatement",
                        "src": "2106:28:13"
                      },
                      {
                        "expression": {
                          "id": 692,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 687,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2148:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 689,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2153:7:13",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 978,
                            "src": "2148:12:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 690,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2163:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 691,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2169:7:13",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1027,
                            "src": "2163:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2148:28:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 693,
                        "nodeType": "ExpressionStatement",
                        "src": "2148:28:13"
                      },
                      {
                        "expression": {
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 694,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2190:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 696,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2195:5:13",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 980,
                            "src": "2190:10:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 697,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2203:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2209:5:13",
                            "memberName": "price",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1029,
                            "src": "2203:11:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2190:24:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 700,
                        "nodeType": "ExpressionStatement",
                        "src": "2190:24:13"
                      },
                      {
                        "expression": {
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 701,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2228:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 703,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2233:8:13",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 982,
                            "src": "2228:13:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 704,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2244:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 705,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2250:8:13",
                            "memberName": "deadline",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1031,
                            "src": "2244:14:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2228:30:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "2228:30:13"
                      },
                      {
                        "expression": {
                          "id": 713,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 708,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2272:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 710,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2277:1:13",
                            "memberName": "v",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 984,
                            "src": "2272:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 711,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2281:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 712,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2287:1:13",
                            "memberName": "v",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1033,
                            "src": "2281:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "src": "2272:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 714,
                        "nodeType": "ExpressionStatement",
                        "src": "2272:16:13"
                      },
                      {
                        "expression": {
                          "id": 720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 715,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2302:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 717,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2307:1:13",
                            "memberName": "r",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 986,
                            "src": "2302:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 718,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2311:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2317:1:13",
                            "memberName": "r",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1035,
                            "src": "2311:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2302:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 721,
                        "nodeType": "ExpressionStatement",
                        "src": "2302:16:13"
                      },
                      {
                        "expression": {
                          "id": 727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 722,
                              "name": "info",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 666,
                              "src": "2332:4:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                "typeString": "struct SAnswerPermit.SaleInfo memory"
                              }
                            },
                            "id": 724,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "2337:1:13",
                            "memberName": "s",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 988,
                            "src": "2332:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 725,
                              "name": "_args",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 640,
                              "src": "2341:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                                "typeString": "struct SAnswerPermit.PostOrderArgs memory"
                              }
                            },
                            "id": 726,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2347:1:13",
                            "memberName": "s",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1037,
                            "src": "2341:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2332:16:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 728,
                        "nodeType": "ExpressionStatement",
                        "src": "2332:16:13"
                      },
                      {
                        "expression": {
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 729,
                              "name": "saleList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 636,
                              "src": "2362:8:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
                                "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo storage ref)"
                              }
                            },
                            "id": 731,
                            "indexExpression": {
                              "id": 730,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 591,
                              "src": "2371:5:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2362:15:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleInfo_$989_storage",
                              "typeString": "struct SAnswerPermit.SaleInfo storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 732,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 666,
                            "src": "2380:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                              "typeString": "struct SAnswerPermit.SaleInfo memory"
                            }
                          },
                          "src": "2362:22:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleInfo_$989_storage",
                            "typeString": "struct SAnswerPermit.SaleInfo storage ref"
                          }
                        },
                        "id": 734,
                        "nodeType": "ExpressionStatement",
                        "src": "2362:22:13"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 740,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 666,
                                    "src": "2514:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 741,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2519:7:13",
                                  "memberName": "tokenId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 978,
                                  "src": "2514:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 738,
                                  "name": "nftPermit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 594,
                                  "src": "2496:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                                    "typeString": "contract YourNFTPermit"
                                  }
                                },
                                "id": 739,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2506:7:13",
                                "memberName": "ownerOf",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32919,
                                "src": "2496:17:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                                  "typeString": "function (uint256) view external returns (address)"
                                }
                              },
                              "id": 742,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2496:31:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 745,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2536:4:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                    "typeString": "contract AnswerPermit"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                    "typeString": "contract AnswerPermit"
                                  }
                                ],
                                "id": 744,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2528:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 743,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2528:7:13",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2528:13:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 747,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2542:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                  "typeString": "struct SAnswerPermit.SaleInfo memory"
                                }
                              },
                              "id": 748,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2547:7:13",
                              "memberName": "tokenId",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 978,
                              "src": "2542:12:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 749,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2556:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                  "typeString": "struct SAnswerPermit.SaleInfo memory"
                                }
                              },
                              "id": 750,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2561:8:13",
                              "memberName": "deadline",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 982,
                              "src": "2556:13:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "expression": {
                                "id": 751,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2570:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                  "typeString": "struct SAnswerPermit.SaleInfo memory"
                                }
                              },
                              "id": 752,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2575:1:13",
                              "memberName": "v",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 984,
                              "src": "2570:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            {
                              "expression": {
                                "id": 753,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2577:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                  "typeString": "struct SAnswerPermit.SaleInfo memory"
                                }
                              },
                              "id": 754,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2582:1:13",
                              "memberName": "r",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 986,
                              "src": "2577:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "expression": {
                                "id": 755,
                                "name": "info",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 666,
                                "src": "2584:4:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                  "typeString": "struct SAnswerPermit.SaleInfo memory"
                                }
                              },
                              "id": 756,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2589:1:13",
                              "memberName": "s",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 988,
                              "src": "2584:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "expression": {
                              "id": 735,
                              "name": "nftPermit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 594,
                              "src": "2479:9:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                                "typeString": "contract YourNFTPermit"
                              }
                            },
                            "id": 737,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2489:6:13",
                            "memberName": "permit",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 36071,
                            "src": "2479:16:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                              "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                            }
                          },
                          "id": 757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2479:112:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 758,
                        "nodeType": "ExpressionStatement",
                        "src": "2479:112:13"
                      }
                    ]
                  },
                  "id": 760,
                  "nodeType": "IfStatement",
                  "src": "1774:828:13",
                  "trueBody": {
                    "id": 661,
                    "nodeType": "Block",
                    "src": "1833:61:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "43616c6c6572206973206e6f7420746f6b656e206f776e65722e",
                              "id": 658,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1854:28:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c729dd2a74d8dfd21adb5da271b0f9ebdf89332a8ec5067e52df89ac6516b08c",
                                "typeString": "literal_string \"Caller is not token owner.\""
                              },
                              "value": "Caller is not token owner."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c729dd2a74d8dfd21adb5da271b0f9ebdf89332a8ec5067e52df89ac6516b08c",
                                "typeString": "literal_string \"Caller is not token owner.\""
                              }
                            ],
                            "id": 657,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1847:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 659,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1847:36:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 660,
                        "nodeType": "ExpressionStatement",
                        "src": "1847:36:13"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 761,
                    "name": "nonce",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 591,
                    "src": "2618:5:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 644,
                  "id": 762,
                  "nodeType": "Return",
                  "src": "2611:12:13"
                }
              ]
            },
            "baseFunctions": [
              921
            ],
            "documentation": {
              "id": 637,
              "nodeType": "StructuredDocumentation",
              "src": "1570:48:13",
              "text": " @dev NFTを出品する関数"
            },
            "functionSelector": "f413d2b6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "postOrder",
            "nameLocation": "1632:9:13",
            "parameters": {
              "id": 641,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 640,
                  "mutability": "mutable",
                  "name": "_args",
                  "nameLocation": "1677:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "1642:40:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PostOrderArgs_$1038_memory_ptr",
                    "typeString": "struct SAnswerPermit.PostOrderArgs"
                  },
                  "typeName": {
                    "id": 639,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 638,
                      "name": "SAnswerPermit.PostOrderArgs",
                      "nameLocations": [
                        "1642:13:13",
                        "1656:13:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1038,
                      "src": "1642:27:13"
                    },
                    "referencedDeclaration": 1038,
                    "src": "1642:27:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PostOrderArgs_$1038_storage_ptr",
                      "typeString": "struct SAnswerPermit.PostOrderArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1641:42:13"
            },
            "returnParameters": {
              "id": 644,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 643,
                  "mutability": "mutable",
                  "name": "saleId",
                  "nameLocation": "1710:6:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 764,
                  "src": "1702:14:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 642,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1701:16:13"
            },
            "scope": 899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 867,
            "nodeType": "FunctionDefinition",
            "src": "2701:1143:13",
            "nodes": [],
            "body": {
              "id": 866,
              "nodeType": "Block",
              "src": "2773:1071:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 775,
                      "mutability": "mutable",
                      "name": "info",
                      "nameLocation": "2838:4:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 866,
                      "src": "2808:34:13",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                        "typeString": "struct SAnswerPermit.SaleInfo"
                      },
                      "typeName": {
                        "id": 774,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 773,
                          "name": "SAnswerPermit.SaleInfo",
                          "nameLocations": [
                            "2808:13:13",
                            "2822:8:13"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 989,
                          "src": "2808:22:13"
                        },
                        "referencedDeclaration": 989,
                        "src": "2808:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleInfo_$989_storage_ptr",
                          "typeString": "struct SAnswerPermit.SaleInfo"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 780,
                  "initialValue": {
                    "baseExpression": {
                      "id": 776,
                      "name": "saleList",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 636,
                      "src": "2845:8:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
                        "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo storage ref)"
                      }
                    },
                    "id": 779,
                    "indexExpression": {
                      "expression": {
                        "id": 777,
                        "name": "_args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2854:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                          "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                        }
                      },
                      "id": 778,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2860:6:13",
                      "memberName": "saleId",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1040,
                      "src": "2854:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2845:22:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SaleInfo_$989_storage",
                      "typeString": "struct SAnswerPermit.SaleInfo storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2808:59:13"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 781,
                        "name": "info",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 775,
                        "src": "2880:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                          "typeString": "struct SAnswerPermit.SaleInfo memory"
                        }
                      },
                      "id": 782,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2885:5:13",
                      "memberName": "price",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 980,
                      "src": "2880:10:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "expression": {
                        "id": 783,
                        "name": "_args",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 768,
                        "src": "2893:5:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                          "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                        }
                      },
                      "id": 784,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2899:6:13",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1042,
                      "src": "2893:12:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2880:25:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 791,
                          "name": "info",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 775,
                          "src": "3012:4:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                            "typeString": "struct SAnswerPermit.SaleInfo memory"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3017:8:13",
                        "memberName": "deadline",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 982,
                        "src": "3012:13:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<=",
                      "rightExpression": {
                        "expression": {
                          "id": 793,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3029:5:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3035:9:13",
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "3029:15:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3012:32:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 803,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3160:3:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 804,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3164:6:13",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3160:10:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 801,
                              "name": "currencyPermit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 597,
                              "src": "3135:14:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                                "typeString": "contract YourCurrencyPermit"
                              }
                            },
                            "id": 802,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3150:9:13",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31974,
                            "src": "3135:24:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3135:36:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 806,
                            "name": "info",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 775,
                            "src": "3175:4:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                              "typeString": "struct SAnswerPermit.SaleInfo memory"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3180:5:13",
                          "memberName": "price",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 980,
                          "src": "3175:10:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3135:50:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "id": 862,
                        "nodeType": "Block",
                        "src": "3291:547:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 817,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3399:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 818,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3403:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3399:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 821,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "3418:4:13",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                        "typeString": "contract AnswerPermit"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_AnswerPermit_$899",
                                        "typeString": "contract AnswerPermit"
                                      }
                                    ],
                                    "id": 820,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "3410:7:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 819,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "3410:7:13",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 822,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "nameLocations": [],
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3410:13:13",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 823,
                                    "name": "_args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "3424:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                                      "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                                    }
                                  },
                                  "id": 824,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3430:6:13",
                                  "memberName": "amount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1042,
                                  "src": "3424:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 825,
                                    "name": "_args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "3438:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                                      "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                                    }
                                  },
                                  "id": 826,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3444:8:13",
                                  "memberName": "deadline",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1044,
                                  "src": "3438:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 827,
                                    "name": "_args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "3453:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                                      "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                                    }
                                  },
                                  "id": 828,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3459:1:13",
                                  "memberName": "v",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1046,
                                  "src": "3453:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 829,
                                    "name": "_args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "3461:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                                      "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                                    }
                                  },
                                  "id": 830,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3467:1:13",
                                  "memberName": "r",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1048,
                                  "src": "3461:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 831,
                                    "name": "_args",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 768,
                                    "src": "3469:5:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                                      "typeString": "struct SAnswerPermit.MatchOrderArgs memory"
                                    }
                                  },
                                  "id": 832,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3475:1:13",
                                  "memberName": "s",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1050,
                                  "src": "3469:7:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                ],
                                "expression": {
                                  "id": 814,
                                  "name": "currencyPermit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "3377:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                                    "typeString": "contract YourCurrencyPermit"
                                  }
                                },
                                "id": 816,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3392:6:13",
                                "memberName": "permit",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32680,
                                "src": "3377:21:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
                                  "typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
                                }
                              },
                              "id": 833,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3377:100:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 834,
                            "nodeType": "ExpressionStatement",
                            "src": "3377:100:13"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 838,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3576:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3580:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3576:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 840,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "3587:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 841,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3592:5:13",
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 974,
                                  "src": "3587:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 842,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "3599:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 843,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3604:5:13",
                                  "memberName": "price",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 980,
                                  "src": "3599:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 835,
                                  "name": "currencyPermit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 597,
                                  "src": "3548:14:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_YourCurrencyPermit_$1280",
                                    "typeString": "contract YourCurrencyPermit"
                                  }
                                },
                                "id": 837,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3563:12:13",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 32075,
                                "src": "3548:27:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,address,uint256) external returns (bool)"
                                }
                              },
                              "id": 844,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3548:62:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 845,
                            "nodeType": "ExpressionStatement",
                            "src": "3548:62:13"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 849,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "3695:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 850,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3700:5:13",
                                  "memberName": "owner",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 974,
                                  "src": "3695:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 851,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "3707:3:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 852,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3711:6:13",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "3707:10:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 853,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "3719:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 854,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3724:7:13",
                                  "memberName": "tokenId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 978,
                                  "src": "3719:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "id": 846,
                                  "name": "nftPermit",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 594,
                                  "src": "3672:9:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_YourNFTPermit_$1344",
                                    "typeString": "contract YourNFTPermit"
                                  }
                                },
                                "id": 848,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3682:12:13",
                                "memberName": "transferFrom",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 33110,
                                "src": "3672:22:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256) external"
                                }
                              },
                              "id": 855,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3672:61:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 856,
                            "nodeType": "ExpressionStatement",
                            "src": "3672:61:13"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 858,
                                    "name": "info",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 775,
                                    "src": "3814:4:13",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_SaleInfo_$989_memory_ptr",
                                      "typeString": "struct SAnswerPermit.SaleInfo memory"
                                    }
                                  },
                                  "id": 859,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "3819:7:13",
                                  "memberName": "tokenId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 978,
                                  "src": "3814:12:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 857,
                                "name": "_resetOrder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 898,
                                "src": "3802:11:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                                  "typeString": "function (uint256)"
                                }
                              },
                              "id": 860,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3802:25:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 861,
                            "nodeType": "ExpressionStatement",
                            "src": "3802:25:13"
                          }
                        ]
                      },
                      "id": 863,
                      "nodeType": "IfStatement",
                      "src": "3131:707:13",
                      "trueBody": {
                        "id": 813,
                        "nodeType": "Block",
                        "src": "3196:73:13",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "hexValue": "596f7520646f6e2774206861766520656e6f756768206d6f6e657920746f206275792069742e",
                                  "id": 810,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "3217:40:13",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_7b6737399b5eff5593ddd1e4be63ffa7742a414a0218e0c14af38bd774edebff",
                                    "typeString": "literal_string \"You don't have enough money to buy it.\""
                                  },
                                  "value": "You don't have enough money to buy it."
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_stringliteral_7b6737399b5eff5593ddd1e4be63ffa7742a414a0218e0c14af38bd774edebff",
                                    "typeString": "literal_string \"You don't have enough money to buy it.\""
                                  }
                                ],
                                "id": 809,
                                "name": "revert",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  -19,
                                  -19
                                ],
                                "referencedDeclaration": -19,
                                "src": "3210:6:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (string memory) pure"
                                }
                              },
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3210:48:13",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 812,
                            "nodeType": "ExpressionStatement",
                            "src": "3210:48:13"
                          }
                        ]
                      }
                    },
                    "id": 864,
                    "nodeType": "IfStatement",
                    "src": "3009:829:13",
                    "trueBody": {
                      "id": 800,
                      "nodeType": "Block",
                      "src": "3054:63:13",
                      "statements": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "hexValue": "446561646c696e652068617320616c7265616479207061737365642e",
                                "id": 797,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3075:30:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_e8c4cee68b0ca49daefeae682400207d83e98a641303c5f70b60685b2966f554",
                                  "typeString": "literal_string \"Deadline has already passed.\""
                                },
                                "value": "Deadline has already passed."
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_e8c4cee68b0ca49daefeae682400207d83e98a641303c5f70b60685b2966f554",
                                  "typeString": "literal_string \"Deadline has already passed.\""
                                }
                              ],
                              "id": 796,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -19,
                                -19
                              ],
                              "referencedDeclaration": -19,
                              "src": "3068:6:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3068:38:13",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 799,
                          "nodeType": "ExpressionStatement",
                          "src": "3068:38:13"
                        }
                      ]
                    }
                  },
                  "id": 865,
                  "nodeType": "IfStatement",
                  "src": "2877:961:13",
                  "trueBody": {
                    "id": 790,
                    "nodeType": "Block",
                    "src": "2916:79:13",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "596f75206d757374207065726d6974206d6f7265206d6f6e657920746f207468697320636f6e74726163742e",
                              "id": 787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2937:46:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_21a0e166e658500f07eb249351c3ed8077f13ad5dd0864eee94c9b0b3c49827c",
                                "typeString": "literal_string \"You must permit more money to this contract.\""
                              },
                              "value": "You must permit more money to this contract."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_21a0e166e658500f07eb249351c3ed8077f13ad5dd0864eee94c9b0b3c49827c",
                                "typeString": "literal_string \"You must permit more money to this contract.\""
                              }
                            ],
                            "id": 786,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "2930:6:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2930:54:13",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 789,
                        "nodeType": "ExpressionStatement",
                        "src": "2930:54:13"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              927
            ],
            "documentation": {
              "id": 765,
              "nodeType": "StructuredDocumentation",
              "src": "2636:60:13",
              "text": " @dev 希望するNFTを購入する関数"
            },
            "functionSelector": "bbc5c2a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "matchOrder",
            "nameLocation": "2710:10:13",
            "parameters": {
              "id": 769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 768,
                  "mutability": "mutable",
                  "name": "_args",
                  "nameLocation": "2757:5:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 867,
                  "src": "2721:41:13",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_memory_ptr",
                    "typeString": "struct SAnswerPermit.MatchOrderArgs"
                  },
                  "typeName": {
                    "id": 767,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 766,
                      "name": "SAnswerPermit.MatchOrderArgs",
                      "nameLocations": [
                        "2721:13:13",
                        "2735:14:13"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1051,
                      "src": "2721:28:13"
                    },
                    "referencedDeclaration": 1051,
                    "src": "2721:28:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_MatchOrderArgs_$1051_storage_ptr",
                      "typeString": "struct SAnswerPermit.MatchOrderArgs"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2720:43:13"
            },
            "returnParameters": {
              "id": 770,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2773:0:13"
            },
            "scope": 899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 898,
            "nodeType": "FunctionDefinition",
            "src": "3933:420:13",
            "nodes": [],
            "body": {
              "id": 897,
              "nodeType": "Block",
              "src": "3981:372:13",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 874,
                      "mutability": "mutable",
                      "name": "counter",
                      "nameLocation": "4022:7:13",
                      "nodeType": "VariableDeclaration",
                      "scope": 897,
                      "src": "4017:12:13",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 873,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4017:4:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 876,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4032:1:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4017:16:13"
                },
                {
                  "body": {
                    "id": 890,
                    "nodeType": "Block",
                    "src": "4115:198:13",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 878,
                                "name": "saleList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 636,
                                "src": "4132:8:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
                                  "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo storage ref)"
                                }
                              },
                              "id": 880,
                              "indexExpression": {
                                "id": 879,
                                "name": "counter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 874,
                                "src": "4141:7:13",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4132:17:13",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SaleInfo_$989_storage",
                                "typeString": "struct SAnswerPermit.SaleInfo storage ref"
                              }
                            },
                            "id": 881,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4150:7:13",
                            "memberName": "tokenId",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 978,
                            "src": "4132:25:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 882,
                            "name": "_tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 870,
                            "src": "4161:8:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4132:37:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 886,
                        "nodeType": "IfStatement",
                        "src": "4129:151:13",
                        "trueBody": {
                          "id": 885,
                          "nodeType": "Block",
                          "src": "4183:97:13",
                          "statements": [
                            {
                              "id": 884,
                              "nodeType": "Break",
                              "src": "4244:5:13"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "4293:9:13",
                          "subExpression": {
                            "id": 887,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 874,
                            "src": "4293:7:13",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 889,
                        "nodeType": "ExpressionStatement",
                        "src": "4293:9:13"
                      }
                    ]
                  },
                  "condition": {
                    "hexValue": "74727565",
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4101:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "id": 891,
                  "nodeType": "WhileStatement",
                  "src": "4095:218:13"
                },
                {
                  "expression": {
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4322:24:13",
                    "subExpression": {
                      "baseExpression": {
                        "id": 892,
                        "name": "saleList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 636,
                        "src": "4329:8:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_SaleInfo_$989_storage_$",
                          "typeString": "mapping(uint256 => struct SAnswerPermit.SaleInfo storage ref)"
                        }
                      },
                      "id": 894,
                      "indexExpression": {
                        "id": 893,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "4338:7:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4329:17:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SaleInfo_$989_storage",
                        "typeString": "struct SAnswerPermit.SaleInfo storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "4322:24:13"
                }
              ]
            },
            "documentation": {
              "id": 868,
              "nodeType": "StructuredDocumentation",
              "src": "3850:78:13",
              "text": " @dev 購入されたNFTの商品情報を削除する関数"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resetOrder",
            "nameLocation": "3942:11:13",
            "parameters": {
              "id": 871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 870,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3962:8:13",
                  "nodeType": "VariableDeclaration",
                  "scope": 898,
                  "src": "3954:16:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3954:7:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3953:18:13"
            },
            "returnParameters": {
              "id": 872,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3981:0:13"
            },
            "scope": 899,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 587,
              "name": "IAnswerPermit",
              "nameLocations": [
                "476:13:13"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 928,
              "src": "476:13:13"
            },
            "id": 588,
            "nodeType": "InheritanceSpecifier",
            "src": "476:13:13"
          }
        ],
        "canonicalName": "AnswerPermit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          899,
          928
        ],
        "name": "AnswerPermit",
        "nameLocation": "460:12:13",
        "scope": 900,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 13
}