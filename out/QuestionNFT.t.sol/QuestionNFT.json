{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Q5_NFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b5061342b8061003d6000396000f3fe60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200012d578063916a17c61462000146578063b5508aa91462000150578063ba414fa6146200015a578063e20c9f711462000175578063fa7626d4146200017f57600080fd5b80630972e29214620000c85780630a9254e414620000d45780631ed7831c14620000de5780633e5e3c2314620001005780633f7286f4146200010a57806366d9a9a01462000114575b600080fd5b620000d26200018d565b005b620000d2620009ae565b620000e862000a07565b604051620000f7919062001445565b60405180910390f35b620000e862000a6b565b620000e862000acd565b6200011e62000b2f565b604051620000f7919062001494565b6200013762000c22565b604051620000f791906200159f565b6200011e62000cfc565b6200013762000de6565b6200016462000ec0565b6040519015158152602001620000f7565b620000e862000feb565b600054620001649060ff1681565b6040805160e08101825260006080820181815260a0830182905260c0830182905282528251606080820185528282526020808301849052828601849052840191909152928201819052918101919091526000604051620001ed9062001429565b604051809103906000f0801580156200020a573d6000803e3d6000fd5b50905060005b60648110156200029757601b54604051631a47197560e21b81526001600160a01b0391821660048201529083169063691c65d4906024016020604051808303816000875af115801562000267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028d919062001605565b5060010162000210565b50601b54604051637ab74e3360e11b81526001600160a01b0383811660048301529091169063f56e9c6690602401600060405180830381600087803b158015620002e057600080fd5b505af1158015620002f5573d6000803e3d6000fd5b505050506200032160405180604001604052806005815260200164416c69636560d81b8152506200104d565b82516001600160a01b03918216905282515160405163c88a5e6d60e01b815291166004820152671bc16d674ec800006024820152600080516020620033d68339815191529063c88a5e6d90604401600060405180830381600087803b1580156200038a57600080fd5b505af11580156200039f573d6000803e3d6000fd5b50505050620003c9604051806040016040528060038152602001622137b160e91b8152506200104d565b6020830180516001600160a01b039283169052515160405163c88a5e6d60e01b815291166004820152671bc16d674ec800006024820152600080516020620033d68339815191529063c88a5e6d90604401600060405180830381600087803b1580156200043557600080fd5b505af11580156200044a573d6000803e3d6000fd5b505083515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d6833981519152925063ca669fa79150602401600060405180830381600087803b158015620004a357600080fd5b505af1158015620004b8573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663a3006abf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200051557600080fd5b505af11580156200052a573d6000803e3d6000fd5b50508451516040516370a0823160e01b81526001600160a01b03918216600482015290851693506370a0823192506024019050602060405180830381865afa1580156200057b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a1919062001605565b60408301819052620005b590600562001061565b60208201515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200060d57600080fd5b505af115801562000622573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663a3006abf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200067f57600080fd5b505af115801562000694573d6000803e3d6000fd5b505050506020830151516040516370a0823160e01b81526001600160a01b03918216600482015290831691506370a0823190602401602060405180830381865afa158015620006e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200070d919062001605565b604083018190526200072190600562001061565b81515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200077657600080fd5b505af11580156200078b573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166301eb528a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080991906200161f565b1515606083018190526200081d9062001190565b60208201515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200087557600080fd5b505af11580156200088a573d6000803e3d6000fd5b5050604080517f596f7520646f6e2774206861766520746865206669727374204e46542e00000060208201528151601d818303018152603d82019283905263f28dceb360e01b909252600080516020620033d6833981519152935063f28dceb39250620008fb91906041016200164a565b600060405180830381600087803b1580156200091657600080fd5b505af11580156200092b573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166301eb528a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000983573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a991906200161f565b505050565b604051620009bc9062001437565b604051809103906000f080158015620009d9573d6000803e3d6000fd5b50601b80546001600160a01b03929092166001600160a01b03199283168117909155601c8054909216179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000a6157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000a42575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000c195760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c0057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bc15790505b5050505050815250508152602001906001019062000b53565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000c1957838290600052602060002001805462000c68906200165f565b80601f016020809104026020016040519081016040528092919081815260200182805462000c96906200165f565b801562000ce75780601f1062000cbb5761010080835404028352916020019162000ce7565b820191906000526020600020905b81548152906001019060200180831162000cc957829003601f168201915b50505050508152602001906001019062000c46565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000c195760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000dcd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d8e5790505b5050505050815250508152602001906001019062000d20565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000c1957838290600052602060002001805462000e2c906200165f565b80601f016020809104026020016040519081016040528092919081815260200182805462000e5a906200165f565b801562000eab5780601f1062000e7f5761010080835404028352916020019162000eab565b820191906000526020600020905b81548152906001019060200180831162000e8d57829003601f168201915b50505050508152602001906001019062000e0a565b60008054610100900460ff161562000ee15750600054610100900460ff1690565b6000600080516020620033d68339815191523b1562000fe65760408051600080516020620033d6833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f68917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200169b565b60408051601f198184030181529082905262000f8491620016ce565b6000604051808303816000865af19150503d806000811462000fc3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fc8565b606091505b509150508080602001905181019062000fe291906200161f565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b60006200105a826200120b565b5092915050565b8082146200118c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010d49060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200118c62001320565b5050565b8062001208577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011f69060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200120862001320565b50565b60008082604051602001620012219190620016ce565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150600080516020620033d68339815191529063ffa1864990602401602060405180830381865afa15801562001288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012ae9190620016ec565b6040516318caf8e360e31b8152909250600080516020620033d68339815191529063c657c71890620012e7908590879060040162001717565b600060405180830381600087803b1580156200130257600080fd5b505af115801562001317573d6000803e3d6000fd5b50505050915091565b600080516020620033d68339815191523b15620014185760408051600080516020620033d6833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013b392916020016200169b565b60408051601f1981840301815290829052620013cf91620016ce565b6000604051808303816000865af19150503d80600081146200140e576040519150601f19603f3d011682016040523d82523d6000602084013e62001413565b606091505b505050505b6000805461ff001916610100179055565b61172c806200174683390190565b6105648062002e7283390190565b6020808252825182820181905260009190848201906040850190845b81811015620014885783516001600160a01b03168352928401929184019160010162001461565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200153c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015265783516001600160e01b0319168252928b019260019290920191908b0190620014fa565b50978a01979550505091870191600101620014bc565b50919998505050505050505050565b60005b83811015620015685781810151838201526020016200154e565b50506000910152565b600081518084526200158b8160208601602086016200154b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620015f857603f19888603018452620015e585835162001571565b94509285019290850190600101620015c6565b5092979650505050505050565b6000602082840312156200161857600080fd5b5051919050565b6000602082840312156200163257600080fd5b815180151581146200164357600080fd5b9392505050565b60208152600062001643602083018462001571565b600181811c908216806200167457607f821691505b6020821081036200169557634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620016c08160048501602087016200154b565b919091016004019392505050565b60008251620016e28184602087016200154b565b9190910192915050565b600060208284031215620016ff57600080fd5b81516001600160a01b03811681146200164357600080fd5b6001600160a01b03831681526040602082018190526000906200173d9083018462001571565b94935050505056fe60806040523480156200001157600080fd5b5060405180604001604052806007815260200166165bdd5c93919560ca1b815250604051806040016040528060048152602001631653919560e21b81525081600090816200006091906200018d565b5060016200006f82826200018d565b5050506200008c620000866200009260201b60201c565b62000096565b62000259565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011357607f821691505b6020821081036200013457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018857600081815260208120601f850160051c81016020861015620001635750805b601f850160051c820191505b8181101562000184578281556001016200016f565b5050505b505050565b81516001600160401b03811115620001a957620001a9620000e8565b620001c181620001ba8454620000fe565b846200013a565b602080601f831160018114620001f95760008415620001e05750858301515b600019600386901b1c1916600185901b17855562000184565b600085815260208120601f198616915b828110156200022a5788860151825594840194600190910190840162000209565b5085821015620002495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114c380620002696000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461029057600080fd5b806370a08231146101e7578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780636352211e146101b3578063691c65d4146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611002565b6102a3565b60405190151581526020015b60405180910390f35b6101406102f5565b60405161012f919061106f565b61016061015b366004611082565b610387565b6040516001600160a01b03909116815260200161012f565b61018b6101863660046110b2565b6103ae565b005b61018b61019b3660046110dc565b6104c8565b61018b6101ae3660046110dc565b6104f9565b6101606101c1366004611082565b610514565b6101d96101d4366004611118565b610574565b60405190815260200161012f565b6101d96101f5366004611118565b6105a8565b61018b61062e565b6006546001600160a01b0316610160565b610140610642565b61018b610229366004611133565b610651565b61018b61023c366004611185565b610660565b61014061024f366004611082565b610698565b610123610262366004611261565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018b61029e366004611118565b6106ff565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030490611294565b80601f016020809104026020016040519081016040528092919081815260200182805461033090611294565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b600061039282610778565b506000908152600460205260409020546001600160a01b031690565b60006103b982610514565b9050806001600160a01b0316836001600160a01b03160361042b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061044757506104478133610262565b6104b95760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610422565b6104c383836107d7565b505050565b6104d23382610845565b6104ee5760405162461bcd60e51b8152600401610422906112ce565b6104c38383836108c4565b6104c383838360405180602001604052806000815250610660565b6000818152600260205260408120546001600160a01b0316806102ef5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b600061057e610a28565b61058c600780546001019055565b600061059760075490565b90506102ef8382610a82565b919050565b60006001600160a01b0382166106125760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610422565b506001600160a01b031660009081526003602052604090205490565b610636610a28565b6106406000610c0d565b565b60606001805461030490611294565b61065c338383610c5f565b5050565b61066a3383610845565b6106865760405162461bcd60e51b8152600401610422906112ce565b61069284848484610d2d565b50505050565b60606106a382610778565b60006106ad610d60565b905060008151116106cd57604051806020016040528060008152506106f8565b806106d784610d80565b6040516020016106e892919061131b565b6040516020818303038152906040525b9392505050565b610707610a28565b6001600160a01b03811661076c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61077581610c0d565b50565b6000818152600260205260409020546001600160a01b03166107755760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080c82610514565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085183610514565b9050806001600160a01b0316846001600160a01b0316148061089857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108bc5750836001600160a01b03166108b184610387565b6001600160a01b0316145b949350505050565b826001600160a01b03166108d782610514565b6001600160a01b0316146108fd5760405162461bcd60e51b81526004016104229061134a565b6001600160a01b03821661095f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610422565b826001600160a01b031661097282610514565b6001600160a01b0316146109985760405162461bcd60e51b81526004016104229061134a565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146106405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b6001600160a01b038216610ad85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610422565b6000818152600260205260409020546001600160a01b031615610b3d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610422565b6000818152600260205260409020546001600160a01b031615610ba25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610422565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610cc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610422565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d388484846108c4565b610d4484848484610e13565b6106925760405162461bcd60e51b81526004016104229061138f565b606060405180608001604052806052815260200161143c60529139905090565b60606000610d8d83610f14565b600101905060008167ffffffffffffffff811115610dad57610dad61116f565b6040519080825280601f01601f191660200182016040528015610dd7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610de157509392505050565b60006001600160a01b0384163b15610f0957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e579033908990889088906004016113e1565b6020604051808303816000875af1925050508015610e92575060408051601f3d908101601f19168201909252610e8f9181019061141e565b60015b610eef573d808015610ec0576040519150601f19603f3d011682016040523d82523d6000602084013e610ec5565b606091505b508051600003610ee75760405162461bcd60e51b81526004016104229061138f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108bc565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f7f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f9d57662386f26fc10000830492506010015b6305f5e1008310610fb5576305f5e100830492506008015b6127108310610fc957612710830492506004015b60648310610fdb576064830492506002015b600a83106102ef5760010192915050565b6001600160e01b03198116811461077557600080fd5b60006020828403121561101457600080fd5b81356106f881610fec565b60005b8381101561103a578181015183820152602001611022565b50506000910152565b6000815180845261105b81602086016020860161101f565b601f01601f19169290920160200192915050565b6020815260006106f86020830184611043565b60006020828403121561109457600080fd5b5035919050565b80356001600160a01b03811681146105a357600080fd5b600080604083850312156110c557600080fd5b6110ce8361109b565b946020939093013593505050565b6000806000606084860312156110f157600080fd5b6110fa8461109b565b92506111086020850161109b565b9150604084013590509250925092565b60006020828403121561112a57600080fd5b6106f88261109b565b6000806040838503121561114657600080fd5b61114f8361109b565b91506020830135801515811461116457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119b57600080fd5b6111a48561109b565b93506111b26020860161109b565b925060408501359150606085013567ffffffffffffffff808211156111d657600080fd5b818701915087601f8301126111ea57600080fd5b8135818111156111fc576111fc61116f565b604051601f8201601f19908116603f011681019083821181831017156112245761122461116f565b816040528281528a602084870101111561123d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561127457600080fd5b61127d8361109b565b915061128b6020840161109b565b90509250929050565b600181811c908216806112a857607f821691505b6020821081036112c857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161132d81846020880161101f565b83519083019061134181836020880161101f565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061141490830184611043565b9695505050505050565b60006020828403121561143057600080fd5b81516106f881610fec56fe68747470733a2f2f696b7a7474702e6d7970696e6174612e636c6f75642f697066732f516d51466b4c535179736a393473354776544850797a547872617777746a67696959533254424c677276773843572fa264697066735822122051acd16dbfb5515a003c934ea0a01a8eb15f81e751a3b6f537bf76aabbcc6fcb64736f6c634300081300336080604052600160025534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e1806100836000396000f3fe6080604052600436106100555760003560e01c806301eb528a1461005a578063715018a6146100845780638da5cb5b1461009b578063a3006abf146100c3578063f2fde38b146100cb578063f56e9c66146100eb575b600080fd5b34801561006657600080fd5b5061006f61010b565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100996101ef565b005b3480156100a757600080fd5b506000546040516001600160a01b03909116815260200161007b565b610099610203565b3480156100d757600080fd5b506100996100e6366004610421565b6102bf565b3480156100f757600080fd5b50610099610106366004610421565b610338565b600180546040516331a9108f60e11b815260009283926001600160a01b031691636352211e916101419160040190815260200190565b602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610445565b6001600160a01b0316336001600160a01b0316146101e75760405162461bcd60e51b815260206004820152601d60248201527f596f7520646f6e2774206861766520746865206669727374204e46542e00000060448201526064015b60405180910390fd5b506001919050565b6101f7610362565b61020160006103bc565b565b60006102176702c68af0bb14000034610462565b905060005b818110156102bb576001546002546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050600280549250905060006102a383610484565b919050555080806102b390610484565b91505061021c565b5050565b6102c7610362565b6001600160a01b03811661032c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101de565b610335816103bc565b50565b610340610362565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461033557600080fd5b60006020828403121561043357600080fd5b813561043e8161040c565b9392505050565b60006020828403121561045757600080fd5b815161043e8161040c565b60008261047f57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016104a457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ee10f2be9903ba1e6eb53f921e73be3a7d449afbf6eb390ab0a4a299d6f54bae64736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122011e61ba099ec3f267c6b3026c8fb321d6a446179ea2d38b312e649e9a388167164736f6c63430008130033",
    "sourceMap": "282:2472:27:-:0;;;1572:26:29;;;1594:4;-1:-1:-1;;1572:26:29;;;;;;;;3288:44:32;;;;;;;;;;;282:2472:27;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620000c35760003560e01c806385226c81116200007a57806385226c81146200012d578063916a17c61462000146578063b5508aa91462000150578063ba414fa6146200015a578063e20c9f711462000175578063fa7626d4146200017f57600080fd5b80630972e29214620000c85780630a9254e414620000d45780631ed7831c14620000de5780633e5e3c2314620001005780633f7286f4146200010a57806366d9a9a01462000114575b600080fd5b620000d26200018d565b005b620000d2620009ae565b620000e862000a07565b604051620000f7919062001445565b60405180910390f35b620000e862000a6b565b620000e862000acd565b6200011e62000b2f565b604051620000f7919062001494565b6200013762000c22565b604051620000f791906200159f565b6200011e62000cfc565b6200013762000de6565b6200016462000ec0565b6040519015158152602001620000f7565b620000e862000feb565b600054620001649060ff1681565b6040805160e08101825260006080820181815260a0830182905260c0830182905282528251606080820185528282526020808301849052828601849052840191909152928201819052918101919091526000604051620001ed9062001429565b604051809103906000f0801580156200020a573d6000803e3d6000fd5b50905060005b60648110156200029757601b54604051631a47197560e21b81526001600160a01b0391821660048201529083169063691c65d4906024016020604051808303816000875af115801562000267573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200028d919062001605565b5060010162000210565b50601b54604051637ab74e3360e11b81526001600160a01b0383811660048301529091169063f56e9c6690602401600060405180830381600087803b158015620002e057600080fd5b505af1158015620002f5573d6000803e3d6000fd5b505050506200032160405180604001604052806005815260200164416c69636560d81b8152506200104d565b82516001600160a01b03918216905282515160405163c88a5e6d60e01b815291166004820152671bc16d674ec800006024820152600080516020620033d68339815191529063c88a5e6d90604401600060405180830381600087803b1580156200038a57600080fd5b505af11580156200039f573d6000803e3d6000fd5b50505050620003c9604051806040016040528060038152602001622137b160e91b8152506200104d565b6020830180516001600160a01b039283169052515160405163c88a5e6d60e01b815291166004820152671bc16d674ec800006024820152600080516020620033d68339815191529063c88a5e6d90604401600060405180830381600087803b1580156200043557600080fd5b505af11580156200044a573d6000803e3d6000fd5b505083515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d6833981519152925063ca669fa79150602401600060405180830381600087803b158015620004a357600080fd5b505af1158015620004b8573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663a3006abf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200051557600080fd5b505af11580156200052a573d6000803e3d6000fd5b50508451516040516370a0823160e01b81526001600160a01b03918216600482015290851693506370a0823192506024019050602060405180830381865afa1580156200057b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005a1919062001605565b60408301819052620005b590600562001061565b60208201515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200060d57600080fd5b505af115801562000622573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b031663a3006abf670de0b6b3a76400006040518263ffffffff1660e01b81526004016000604051808303818588803b1580156200067f57600080fd5b505af115801562000694573d6000803e3d6000fd5b505050506020830151516040516370a0823160e01b81526001600160a01b03918216600482015290831691506370a0823190602401602060405180830381865afa158015620006e7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200070d919062001605565b604083018190526200072190600562001061565b81515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200077657600080fd5b505af11580156200078b573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166301eb528a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015620007e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200080991906200161f565b1515606083018190526200081d9062001190565b60208201515160405163ca669fa760e01b81526001600160a01b039091166004820152600080516020620033d68339815191529063ca669fa790602401600060405180830381600087803b1580156200087557600080fd5b505af11580156200088a573d6000803e3d6000fd5b5050604080517f596f7520646f6e2774206861766520746865206669727374204e46542e00000060208201528151601d818303018152603d82019283905263f28dceb360e01b909252600080516020620033d6833981519152935063f28dceb39250620008fb91906041016200164a565b600060405180830381600087803b1580156200091657600080fd5b505af11580156200092b573d6000803e3d6000fd5b50505050601b60009054906101000a90046001600160a01b03166001600160a01b03166301eb528a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000983573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a991906200161f565b505050565b604051620009bc9062001437565b604051809103906000f080158015620009d9573d6000803e3d6000fd5b50601b80546001600160a01b03929092166001600160a01b03199283168117909155601c8054909216179055565b6060600d80548060200260200160405190810160405280929190818152602001828054801562000a6157602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831162000a42575b5050505050905090565b6060600f80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b6060600e80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101562000c195760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000c0057602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000bc15790505b5050505050815250508152602001906001019062000b53565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101562000c1957838290600052602060002001805462000c68906200165f565b80601f016020809104026020016040519081016040528092919081815260200182805462000c96906200165f565b801562000ce75780601f1062000cbb5761010080835404028352916020019162000ce7565b820191906000526020600020905b81548152906001019060200180831162000cc957829003601f168201915b50505050508152602001906001019062000c46565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101562000c195760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801562000dcd57602002820191906000526020600020906000905b82829054906101000a900460e01b6001600160e01b0319168152602001906004019060208260030104928301926001038202915080841162000d8e5790505b5050505050815250508152602001906001019062000d20565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101562000c1957838290600052602060002001805462000e2c906200165f565b80601f016020809104026020016040519081016040528092919081815260200182805462000e5a906200165f565b801562000eab5780601f1062000e7f5761010080835404028352916020019162000eab565b820191906000526020600020905b81548152906001019060200180831162000e8d57829003601f168201915b50505050508152602001906001019062000e0a565b60008054610100900460ff161562000ee15750600054610100900460ff1690565b6000600080516020620033d68339815191523b1562000fe65760408051600080516020620033d6833981519152602082018190526519985a5b195960d21b8284015282518083038401815260608301909352600092909162000f68917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016200169b565b60408051601f198184030181529082905262000f8491620016ce565b6000604051808303816000865af19150503d806000811462000fc3576040519150601f19603f3d011682016040523d82523d6000602084013e62000fc8565b606091505b509150508080602001905181019062000fe291906200161f565b9150505b919050565b6060600c80548060200260200160405190810160405280929190818152602001828054801562000a61576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831162000a42575050505050905090565b60006200105a826200120b565b5092915050565b8082146200118c577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620010d49060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808080808081319599d60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a81830152690808080808149a59da1d60b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a16200118c62001320565b5050565b8062001208577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051620011f69060208082526017908201527f4572726f723a20417373657274696f6e204661696c6564000000000000000000604082015260600190565b60405180910390a16200120862001320565b50565b60008082604051602001620012219190620016ce565b60408051808303601f190181529082905280516020909101206001625e79b760e01b03198252600482018190529150600080516020620033d68339815191529063ffa1864990602401602060405180830381865afa15801562001288573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012ae9190620016ec565b6040516318caf8e360e31b8152909250600080516020620033d68339815191529063c657c71890620012e7908590879060040162001717565b600060405180830381600087803b1580156200130257600080fd5b505af115801562001317573d6000803e3d6000fd5b50505050915091565b600080516020620033d68339815191523b15620014185760408051600080516020620033d6833981519152602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f1981840301815290829052620013b392916020016200169b565b60408051601f1981840301815290829052620013cf91620016ce565b6000604051808303816000865af19150503d80600081146200140e576040519150601f19603f3d011682016040523d82523d6000602084013e62001413565b606091505b505050505b6000805461ff001916610100179055565b61172c806200174683390190565b6105648062002e7283390190565b6020808252825182820181905260009190848201906040850190845b81811015620014885783516001600160a01b03168352928401929184019160010162001461565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156200153c57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b80831015620015265783516001600160e01b0319168252928b019260019290920191908b0190620014fa565b50978a01979550505091870191600101620014bc565b50919998505050505050505050565b60005b83811015620015685781810151838201526020016200154e565b50506000910152565b600081518084526200158b8160208601602086016200154b565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015620015f857603f19888603018452620015e585835162001571565b94509285019290850190600101620015c6565b5092979650505050505050565b6000602082840312156200161857600080fd5b5051919050565b6000602082840312156200163257600080fd5b815180151581146200164357600080fd5b9392505050565b60208152600062001643602083018462001571565b600181811c908216806200167457607f821691505b6020821081036200169557634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160e01b0319831681528151600090620016c08160048501602087016200154b565b919091016004019392505050565b60008251620016e28184602087016200154b565b9190910192915050565b600060208284031215620016ff57600080fd5b81516001600160a01b03811681146200164357600080fd5b6001600160a01b03831681526040602082018190526000906200173d9083018462001571565b94935050505056fe60806040523480156200001157600080fd5b5060405180604001604052806007815260200166165bdd5c93919560ca1b815250604051806040016040528060048152602001631653919560e21b81525081600090816200006091906200018d565b5060016200006f82826200018d565b5050506200008c620000866200009260201b60201c565b62000096565b62000259565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011357607f821691505b6020821081036200013457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018857600081815260208120601f850160051c81016020861015620001635750805b601f850160051c820191505b8181101562000184578281556001016200016f565b5050505b505050565b81516001600160401b03811115620001a957620001a9620000e8565b620001c181620001ba8454620000fe565b846200013a565b602080601f831160018114620001f95760008415620001e05750858301515b600019600386901b1c1916600185901b17855562000184565b600085815260208120601f198616915b828110156200022a5788860151825594840194600190910190840162000209565b5085821015620002495787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6114c380620002696000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a2578063a22cb46511610071578063a22cb4651461021b578063b88d4fde1461022e578063c87b56dd14610241578063e985e9c514610254578063f2fde38b1461029057600080fd5b806370a08231146101e7578063715018a6146101fa5780638da5cb5b1461020257806395d89b411461021357600080fd5b806323b872dd116100de57806323b872dd1461018d57806342842e0e146101a05780636352211e146101b3578063691c65d4146101c657600080fd5b806301ffc9a71461011057806306fdde0314610138578063081812fc1461014d578063095ea7b314610178575b600080fd5b61012361011e366004611002565b6102a3565b60405190151581526020015b60405180910390f35b6101406102f5565b60405161012f919061106f565b61016061015b366004611082565b610387565b6040516001600160a01b03909116815260200161012f565b61018b6101863660046110b2565b6103ae565b005b61018b61019b3660046110dc565b6104c8565b61018b6101ae3660046110dc565b6104f9565b6101606101c1366004611082565b610514565b6101d96101d4366004611118565b610574565b60405190815260200161012f565b6101d96101f5366004611118565b6105a8565b61018b61062e565b6006546001600160a01b0316610160565b610140610642565b61018b610229366004611133565b610651565b61018b61023c366004611185565b610660565b61014061024f366004611082565b610698565b610123610262366004611261565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b61018b61029e366004611118565b6106ff565b60006001600160e01b031982166380ac58cd60e01b14806102d457506001600160e01b03198216635b5e139f60e01b145b806102ef57506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461030490611294565b80601f016020809104026020016040519081016040528092919081815260200182805461033090611294565b801561037d5780601f106103525761010080835404028352916020019161037d565b820191906000526020600020905b81548152906001019060200180831161036057829003601f168201915b5050505050905090565b600061039282610778565b506000908152600460205260409020546001600160a01b031690565b60006103b982610514565b9050806001600160a01b0316836001600160a01b03160361042b5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061044757506104478133610262565b6104b95760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610422565b6104c383836107d7565b505050565b6104d23382610845565b6104ee5760405162461bcd60e51b8152600401610422906112ce565b6104c38383836108c4565b6104c383838360405180602001604052806000815250610660565b6000818152600260205260408120546001600160a01b0316806102ef5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b600061057e610a28565b61058c600780546001019055565b600061059760075490565b90506102ef8382610a82565b919050565b60006001600160a01b0382166106125760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610422565b506001600160a01b031660009081526003602052604090205490565b610636610a28565b6106406000610c0d565b565b60606001805461030490611294565b61065c338383610c5f565b5050565b61066a3383610845565b6106865760405162461bcd60e51b8152600401610422906112ce565b61069284848484610d2d565b50505050565b60606106a382610778565b60006106ad610d60565b905060008151116106cd57604051806020016040528060008152506106f8565b806106d784610d80565b6040516020016106e892919061131b565b6040516020818303038152906040525b9392505050565b610707610a28565b6001600160a01b03811661076c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61077581610c0d565b50565b6000818152600260205260409020546001600160a01b03166107755760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610422565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061080c82610514565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061085183610514565b9050806001600160a01b0316846001600160a01b0316148061089857506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806108bc5750836001600160a01b03166108b184610387565b6001600160a01b0316145b949350505050565b826001600160a01b03166108d782610514565b6001600160a01b0316146108fd5760405162461bcd60e51b81526004016104229061134a565b6001600160a01b03821661095f5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610422565b826001600160a01b031661097282610514565b6001600160a01b0316146109985760405162461bcd60e51b81526004016104229061134a565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6006546001600160a01b031633146106405760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b6001600160a01b038216610ad85760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610422565b6000818152600260205260409020546001600160a01b031615610b3d5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610422565b6000818152600260205260409020546001600160a01b031615610ba25760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610422565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b031603610cc05760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610422565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610d388484846108c4565b610d4484848484610e13565b6106925760405162461bcd60e51b81526004016104229061138f565b606060405180608001604052806052815260200161143c60529139905090565b60606000610d8d83610f14565b600101905060008167ffffffffffffffff811115610dad57610dad61116f565b6040519080825280601f01601f191660200182016040528015610dd7576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610de157509392505050565b60006001600160a01b0384163b15610f0957604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610e579033908990889088906004016113e1565b6020604051808303816000875af1925050508015610e92575060408051601f3d908101601f19168201909252610e8f9181019061141e565b60015b610eef573d808015610ec0576040519150601f19603f3d011682016040523d82523d6000602084013e610ec5565b606091505b508051600003610ee75760405162461bcd60e51b81526004016104229061138f565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506108bc565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610f535772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610f7f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610f9d57662386f26fc10000830492506010015b6305f5e1008310610fb5576305f5e100830492506008015b6127108310610fc957612710830492506004015b60648310610fdb576064830492506002015b600a83106102ef5760010192915050565b6001600160e01b03198116811461077557600080fd5b60006020828403121561101457600080fd5b81356106f881610fec565b60005b8381101561103a578181015183820152602001611022565b50506000910152565b6000815180845261105b81602086016020860161101f565b601f01601f19169290920160200192915050565b6020815260006106f86020830184611043565b60006020828403121561109457600080fd5b5035919050565b80356001600160a01b03811681146105a357600080fd5b600080604083850312156110c557600080fd5b6110ce8361109b565b946020939093013593505050565b6000806000606084860312156110f157600080fd5b6110fa8461109b565b92506111086020850161109b565b9150604084013590509250925092565b60006020828403121561112a57600080fd5b6106f88261109b565b6000806040838503121561114657600080fd5b61114f8361109b565b91506020830135801515811461116457600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561119b57600080fd5b6111a48561109b565b93506111b26020860161109b565b925060408501359150606085013567ffffffffffffffff808211156111d657600080fd5b818701915087601f8301126111ea57600080fd5b8135818111156111fc576111fc61116f565b604051601f8201601f19908116603f011681019083821181831017156112245761122461116f565b816040528281528a602084870101111561123d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561127457600080fd5b61127d8361109b565b915061128b6020840161109b565b90509250929050565b600181811c908216806112a857607f821691505b6020821081036112c857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b6000835161132d81846020880161101f565b83519083019061134181836020880161101f565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061141490830184611043565b9695505050505050565b60006020828403121561143057600080fd5b81516106f881610fec56fe68747470733a2f2f696b7a7474702e6d7970696e6174612e636c6f75642f697066732f516d51466b4c535179736a393473354776544850797a547872617777746a67696959533254424c677276773843572fa264697066735822122051acd16dbfb5515a003c934ea0a01a8eb15f81e751a3b6f537bf76aabbcc6fcb64736f6c634300081300336080604052600160025534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e1806100836000396000f3fe6080604052600436106100555760003560e01c806301eb528a1461005a578063715018a6146100845780638da5cb5b1461009b578063a3006abf146100c3578063f2fde38b146100cb578063f56e9c66146100eb575b600080fd5b34801561006657600080fd5b5061006f61010b565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100996101ef565b005b3480156100a757600080fd5b506000546040516001600160a01b03909116815260200161007b565b610099610203565b3480156100d757600080fd5b506100996100e6366004610421565b6102bf565b3480156100f757600080fd5b50610099610106366004610421565b610338565b600180546040516331a9108f60e11b815260009283926001600160a01b031691636352211e916101419160040190815260200190565b602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610445565b6001600160a01b0316336001600160a01b0316146101e75760405162461bcd60e51b815260206004820152601d60248201527f596f7520646f6e2774206861766520746865206669727374204e46542e00000060448201526064015b60405180910390fd5b506001919050565b6101f7610362565b61020160006103bc565b565b60006102176702c68af0bb14000034610462565b905060005b818110156102bb576001546002546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050600280549250905060006102a383610484565b919050555080806102b390610484565b91505061021c565b5050565b6102c7610362565b6001600160a01b03811661032c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101de565b610335816103bc565b50565b610340610362565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461033557600080fd5b60006020828403121561043357600080fd5b813561043e8161040c565b9392505050565b60006020828403121561045757600080fd5b815161043e8161040c565b60008261047f57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016104a457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ee10f2be9903ba1e6eb53f921e73be3a7d449afbf6eb390ab0a4a299d6f54bae64736f6c634300081300330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122011e61ba099ec3f267c6b3026c8fb321d6a446179ea2d38b312e649e9a388167164736f6c63430008130033",
    "sourceMap": "282:2472:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;737:2015;;;:::i;:::-;;392:124;;;:::i;2161:134:35:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:29:-;;;:::i;:::-;;;3753:14:66;;3746:22;3728:41;;3716:2;3701:18;1819:584:29;3588:187:66;2013:142:35;;;:::i;1572:26:29:-;;;;;;;;;737:2015:27;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;804:11:27;818:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;804:27;;908:9;904:116;923:3;919:1;:7;904:116;;;964:12;;943:35;;-1:-1:-1;;;943:35:27;;-1:-1:-1;;;;;964:12:27;;;943:35;;;3926:51:66;943:12:27;;;;;;3899:18:66;;943:35:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1004:3:27;;904:116;;;-1:-1:-1;1080:12:27;;:33;;-1:-1:-1;;;1080:33:27;;-1:-1:-1;;;;;3944:32:66;;;1080:33:27;;;3926:51:66;1080:12:27;;;;:19;;3899:18:66;;1080:33:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1196:17;;;;;;;;;;;;;;-1:-1:-1;;;1196:17:27;;;:8;:17::i;:::-;1178:10;;-1:-1:-1;;;;;1178:35:27;;;;;1231:10;;:15;1223:33;;-1:-1:-1;;;1223:33:27;;4395:32:66;;1223:33:27;;;4377:51:66;1248:7:27;4444:18:66;;;4437:34;-1:-1:-1;;;;;;;;;;;1223:7:27;;;4350:18:66;;1223:33:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1333:15;;;;;;;;;;;;;;-1:-1:-1;;;1333:15:27;;;:8;:15::i;:::-;1317:8;;;;;-1:-1:-1;;;;;1317:31:27;;;;;1366:8;:13;1358:31;;-1:-1:-1;;;1358:31:27;;4395:32:66;;1358:31:27;;;4377:51:66;1381:7:27;4444:18:66;;;4437:34;-1:-1:-1;;;;;;;;;;;1358:7:27;;;4350:18:66;;1358:31:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1453:10:27;;:15;1444:25;;-1:-1:-1;;;1444:25:27;;-1:-1:-1;;;;;3944:32:66;;;1444:25:27;;;3926:51:66;-1:-1:-1;;;;;;;;;;;1444:8:27;-1:-1:-1;1444:8:27;;-1:-1:-1;3899:18:66;;1444:25:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:12;;;;;;;;;-1:-1:-1;;;;;1526:12:27;-1:-1:-1;;;;;1526:27:27;;1561:7;1526:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1645:10:27;;:15;1631:30;;-1:-1:-1;;;1631:30:27;;-1:-1:-1;;;;;3944:32:66;;;1631:30:27;;;3926:51:66;1631:13:27;;;;-1:-1:-1;1631:13:27;;-1:-1:-1;3899:18:66;;;-1:-1:-1;1631:30:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1616:12;;;:45;;;1718:25;;1741:1;1718:8;:25::i;:::-;1804:8;;;;:13;1795:23;;-1:-1:-1;;;1795:23:27;;-1:-1:-1;;;;;3944:32:66;;;1795:23:27;;;3926:51:66;-1:-1:-1;;;;;;;;;;;1795:8:27;;;3899:18:66;;1795:23:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1878:12;;;;;;;;;-1:-1:-1;;;;;1878:12:27;-1:-1:-1;;;;;1878:27:27;;1913:7;1878:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2080:8:27;;;;:13;2066:28;;-1:-1:-1;;;2066:28:27;;-1:-1:-1;;;;;3944:32:66;;;2066:28:27;;;3926:51:66;2066:13:27;;;;-1:-1:-1;2066:13:27;;3899:18:66;;2066:28:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2051:12;;;:43;;;2149:25;;2172:1;2149:8;:25::i;:::-;2238:10;;:15;2229:25;;-1:-1:-1;;;2229:25:27;;-1:-1:-1;;;;;3944:32:66;;;2229:25:27;;;3926:51:66;-1:-1:-1;;;;;;;;;;;2229:8:27;;;3899:18:66;;2229:25:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:12;;;;;;;;;-1:-1:-1;;;;;2360:12:27;-1:-1:-1;;;;;2360:35:27;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2344:53;;:13;;;:53;;;2407:25;;:10;:25::i;:::-;2493:8;;;;:13;2484:23;;-1:-1:-1;;;2484:23:27;;-1:-1:-1;;;;;3944:32:66;;;2484:23:27;;;3926:51:66;-1:-1:-1;;;;;;;;;;;2484:8:27;;;3899:18:66;;2484:23:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2648:49:27;;;4978:31:66;2648:49:27;;;4966:44:66;2648:49:27;;;;;;;;;5026:12:66;;;2648:49:27;;;;-1:-1:-1;;;2632:66:27;;;-1:-1:-1;;;;;;;;;;;2632:15:27;-1:-1:-1;2632:15:27;;-1:-1:-1;2632:66:27;;2648:49;2632:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2708:12;;;;;;;;;-1:-1:-1;;;;;2708:12:27;-1:-1:-1;;;;;2708:35:27;;:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;767:1985;;737:2015::o;392:124::-;441:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;426:12:27;:30;;-1:-1:-1;;;;;426:30:27;;;;-1:-1:-1;;;;;;426:30:27;;;;;;;;466:19;:43;;;;;;;;392:124::o;2161:134:35:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:35;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:35;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:35;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:29;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:29;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2985:55:29;3066:16;1980:374;;2196:43;;;-1:-1:-1;;;;;;;;;;;2196:43:29;;;4377:51:66;;;-1:-1:-1;;;4444:18:66;;;4437:34;2196:43:29;;;;;;;;;4350:18:66;;;2196:43:29;;;-1:-1:-1;;1671:64:29;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:29;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:29:o;2013:142:35:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:35;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;15314:125:33:-;15378:12;15412:20;15427:4;15412:14;:20::i;:::-;-1:-1:-1;15402:30:33;15314:125;-1:-1:-1;;15314:125:33:o;5209:262:29:-;5271:1;5266;:6;5262:203;;5293:41;;;;;6819:2:66;6801:21;;;6858:2;6838:18;;;6831:30;6897:34;6892:2;6877:18;;6870:62;-1:-1:-1;;;6963:2:66;6948:18;;6941:32;7005:3;6990:19;;6617:398;5293:41:29;;;;;;;;5353:31;;;7232:21:66;;;7289:2;7269:18;;;7262:30;-1:-1:-1;;;7323:2:66;7308:18;;7301:40;7408:4;7393:20;;7386:36;;;5353:31:29;;;;;;;7373:3:66;5353:31:29;;;5403;;;7645:21:66;;;7702:2;7682:18;;;7675:30;-1:-1:-1;;;7736:2:66;7721:18;;7714:40;7821:4;7806:20;;7799:36;;;5403:31:29;;;;;;;7786:3:66;5403:31:29;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3262:157::-;3322:9;3317:96;;3352:30;;;;;8048:2:66;8030:21;;;8087:2;8067:18;;;8060:30;8126:25;8121:2;8106:18;;8099:53;8184:2;8169:18;;7846:347;3352:30:29;;;;;;;;3396:6;:4;:6::i;:::-;3262:157;:::o;15033:242:33:-;15103:12;15117:18;15195:4;15178:22;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;15178:22:33;;;;;;;15168:33;;15178:22;15168:33;;;;-1:-1:-1;;;;;;15219:19:33;;;;;8638:25:66;;;15168:33:33;-1:-1:-1;;;;;;;;;;;;15219:7:33;;;8611:18:66;;15219:19:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15248:20;;-1:-1:-1;;;15248:20:33;;15212:26;;-1:-1:-1;;;;;;;;;;;;15248:8:33;;;:20;;15212:26;;15263:4;;15248:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15033:242;;;:::o;2409:432:29:-;-1:-1:-1;;;;;;;;;;;2985:55:29;3066:16;2452:359;;2652:67;;;-1:-1:-1;;;;;;;;;;;2652:67:29;;;9493:51:66;;;-1:-1:-1;;;9560:18:66;;;9553:34;;;;2712:4:29;9603:18:66;;;9596:34;2489:11:29;;1671:64;2586:43;;9466:18:66;;2652:67:29;;;-1:-1:-1;;2652:67:29;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;-1:-1:-1;;2541:196:29;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:29;2820:7;:14;;-1:-1:-1;;2820:14:29;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:658:66:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:195;465:6;462:1;459:13;451:195;;;530:13;;-1:-1:-1;;;;;526:39:66;514:52;;621:15;;;;586:12;;;;562:1;480:9;451:195;;;-1:-1:-1;663:3:66;;14:658;-1:-1:-1;;;;;;14:658:66:o;677:1567::-;879:4;908:2;948;937:9;933:18;978:2;967:9;960:21;1001:6;1036;1030:13;1067:6;1059;1052:22;1093:2;1083:12;;1126:2;1115:9;1111:18;1104:25;;1188:2;1178:6;1175:1;1171:14;1160:9;1156:30;1152:39;1226:2;1218:6;1214:15;1247:1;1268;1278:937;1294:6;1289:3;1286:15;1278:937;;;1363:22;;;-1:-1:-1;;1359:36:66;1347:49;;1419:13;;1506:9;;-1:-1:-1;;;;;1502:35:66;1487:51;;1577:11;;1571:18;1609:15;;;1602:27;;;1690:19;;1459:15;;;1722:24;;;1812:21;;;;1857:1;;1780:2;1768:15;;;1871:236;1887:8;1882:3;1879:17;1871:236;;;1968:15;;-1:-1:-1;;;;;;1964:42:66;1950:57;;2076:17;;;;1915:1;1906:11;;;;;2033:14;;;;1871:236;;;-1:-1:-1;2193:12:66;;;;2130:5;-1:-1:-1;;;2158:15:66;;;;1320:1;1311:11;1278:937;;;-1:-1:-1;2232:6:66;;677:1567;-1:-1:-1;;;;;;;;;677:1567:66:o;2249:250::-;2334:1;2344:113;2358:6;2355:1;2352:13;2344:113;;;2434:11;;;2428:18;2415:11;;;2408:39;2380:2;2373:10;2344:113;;;-1:-1:-1;;2491:1:66;2473:16;;2466:27;2249:250::o;2504:271::-;2546:3;2584:5;2578:12;2611:6;2606:3;2599:19;2627:76;2696:6;2689:4;2684:3;2680:14;2673:4;2666:5;2662:16;2627:76;:::i;:::-;2757:2;2736:15;-1:-1:-1;;2732:29:66;2723:39;;;;2764:4;2719:50;;2504:271;-1:-1:-1;;2504:271:66:o;2780:803::-;2942:4;2971:2;3011;3000:9;2996:18;3041:2;3030:9;3023:21;3064:6;3099;3093:13;3130:6;3122;3115:22;3168:2;3157:9;3153:18;3146:25;;3230:2;3220:6;3217:1;3213:14;3202:9;3198:30;3194:39;3180:53;;3268:2;3260:6;3256:15;3289:1;3299:255;3313:6;3310:1;3307:13;3299:255;;;3406:2;3402:7;3390:9;3382:6;3378:22;3374:36;3369:3;3362:49;3434:40;3467:6;3458;3452:13;3434:40;:::i;:::-;3424:50;-1:-1:-1;3532:12:66;;;;3497:15;;;;3335:1;3328:9;3299:255;;;-1:-1:-1;3571:6:66;;2780:803;-1:-1:-1;;;;;;;2780:803:66:o;3988:184::-;4058:6;4111:2;4099:9;4090:7;4086:23;4082:32;4079:52;;;4127:1;4124;4117:12;4079:52;-1:-1:-1;4150:16:66;;3988:184;-1:-1:-1;3988:184:66:o;4482:277::-;4549:6;4602:2;4590:9;4581:7;4577:23;4573:32;4570:52;;;4618:1;4615;4608:12;4570:52;4650:9;4644:16;4703:5;4696:13;4689:21;4682:5;4679:32;4669:60;;4725:1;4722;4715:12;4669:60;4748:5;4482:277;-1:-1:-1;;;4482:277:66:o;5049:218::-;5196:2;5185:9;5178:21;5159:4;5216:45;5257:2;5246:9;5242:18;5234:6;5216:45;:::i;5272:380::-;5351:1;5347:12;;;;5394;;;5415:61;;5469:4;5461:6;5457:17;5447:27;;5415:61;5522:2;5514:6;5511:14;5491:18;5488:38;5485:161;;5568:10;5563:3;5559:20;5556:1;5549:31;5603:4;5600:1;5593:15;5631:4;5628:1;5621:15;5485:161;;5272:380;;;:::o;5936:384::-;-1:-1:-1;;;;;;6121:33:66;;6109:46;;6178:13;;6091:3;;6200:74;6178:13;6263:1;6254:11;;6247:4;6235:17;;6200:74;:::i;:::-;6294:16;;;;6312:1;6290:24;;5936:384;-1:-1:-1;;;5936:384:66:o;6325:287::-;6454:3;6492:6;6486:13;6508:66;6567:6;6562:3;6555:4;6547:6;6543:17;6508:66;:::i;:::-;6590:16;;;;;6325:287;-1:-1:-1;;6325:287:66:o;8674:290::-;8744:6;8797:2;8785:9;8776:7;8772:23;8768:32;8765:52;;;8813:1;8810;8803:12;8765:52;8839:16;;-1:-1:-1;;;;;8884:31:66;;8874:42;;8864:70;;8930:1;8927;8920:12;8969:317;-1:-1:-1;;;;;9146:32:66;;9128:51;;9215:2;9210;9195:18;;9188:30;;;-1:-1:-1;;9235:45:66;;9261:18;;9253:6;9235:45;:::i;:::-;9227:53;8969:317;-1:-1:-1;;;;8969:317:66:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Q5_NFT()": "0972e292"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Q5_NFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"test_Q5_NFT()\":{\"notice\":\"Q-5. ERC-721\\u3068approval\\u3068\\u30d7\\u30ed\\u30b0\\u30e9\\u30de\\u30d6\\u30eb\\u306a\\u9001\\u91d1\\u3068\\u591a\\u69d8\\u306a\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8 \\u30ac\\u30c1\\u30e3\\u30ac\\u30c1\\u30e3\\u3092\\u901a\\u3057\\u3066\\u3001ERC-721\\u306e\\u5185\\u5bb9\\u3068\\u30b3\\u30f3\\u30c8\\u30e9\\u30af\\u30c8\\u3078\\u306e\\u9001\\u91d1\\u3092\\u5b66\\u3076\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Q5/QuestionNFT.t.sol\":\"QuestionNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=util/lib/openzeppelin-contracts/\",\":ds-test/=util/lib/forge-std/lib/ds-test/src/\",\":forge-std/=util/lib/forge-std/src/\",\":openzeppelin-contracts/=util/lib/openzeppelin-contracts/\",\":scal-std/=util/lib/scal-std/src/\",\":src/=contracts/src/\",\":test/=test/\"]},\"sources\":{\"contracts/src/A5/AnswerNFT.sol\":{\"keccak256\":\"0xb8926c67e1239e17e3f147291ac3152895b21b2e7faf655173921b61891caae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01cec5044fe9f9c3992c50c6219d589a4eaa3731d9c6c2ab319a3eb225a2f092\",\"dweb:/ipfs/QmVHCsQjwUzM9GZjiMebJhCB6NzS7DGCVwEU47GvF16MW3\"]},\"contracts/src/A5/interfaces/IAnswerNFT.sol\":{\"keccak256\":\"0x6dbbf6e73f62d6ab2c2935453636f1632bee60127517c776aed25c6be90dc28c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f4c78d5eb44852b34f5c50a5abf85228097670ac2846ed7d696dc54232a0b72\",\"dweb:/ipfs/QmbGwsmSPYPG66ZCZTwLrdaH74zvXuQ32A47B6U1y6FNMg\"]},\"contracts/src/A5/interfaces/SAnswerNFT.sol\":{\"keccak256\":\"0x4859ac0482e3eaab0d6a6b48b2356f40c1a4a34921f82d3d82710c088f93ba38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://705f11608a5595df911e4aea957ecc62bb31b6c65232e8cd11a035a69c4e6604\",\"dweb:/ipfs/QmemEDjDRHQNRMEEH5zNJMjCqfMEWJDm6tqHZSW16EbrbW\"]},\"contracts/src/A5/utils/YourNFT.sol\":{\"keccak256\":\"0x47efc09e3d80102f8064c2c4b28d0d14d7d2175b081061919c0deba7d009b099\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15903b24301c2a9ee105baebe281456dcbc1e3e184684a8baf6870ebebb81667\",\"dweb:/ipfs/QmRZUHW7UKVNJGg4pcHezfSra9Gs1DSTLRkYEby8D79jQe\"]},\"test/Q5/QuestionNFT.t.sol\":{\"keccak256\":\"0x0e4641eabc3e049a032bf5e2618086415c3aaa00fa29062fb52a26210bad98b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3803aa34796d42cd35c21e2674a98ddf5d8e0e3b47e95f82130e9e556a4c96c\",\"dweb:/ipfs/QmUwiHnKxp4FTyJsTveNhkNHnACEqCh5w8oAi8G3Q7pJL2\"]},\"util/lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749\",\"dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V\"]},\"util/lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"util/lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af\",\"dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g\"]},\"util/lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"util/lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab\",\"dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP\"]},\"util/lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"util/lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"util/lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"util/lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"util/lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"util/lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"util/lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"util/lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"util/lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef\",\"dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH\"]},\"util/lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"util/lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"util/lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"util/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"util/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_Q5_NFT"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "test_Q5_NFT()": {
            "notice": "Q-5. ERC-721とapprovalとプログラマブルな送金と多様なコントラクト ガチャガチャを通して、ERC-721の内容とコントラクトへの送金を学ぶ"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=util/lib/openzeppelin-contracts/",
        ":ds-test/=util/lib/forge-std/lib/ds-test/src/",
        ":forge-std/=util/lib/forge-std/src/",
        ":openzeppelin-contracts/=util/lib/openzeppelin-contracts/",
        ":scal-std/=util/lib/scal-std/src/",
        ":src/=contracts/src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/Q5/QuestionNFT.t.sol": "QuestionNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/A5/AnswerNFT.sol": {
        "keccak256": "0xb8926c67e1239e17e3f147291ac3152895b21b2e7faf655173921b61891caae8",
        "urls": [
          "bzz-raw://01cec5044fe9f9c3992c50c6219d589a4eaa3731d9c6c2ab319a3eb225a2f092",
          "dweb:/ipfs/QmVHCsQjwUzM9GZjiMebJhCB6NzS7DGCVwEU47GvF16MW3"
        ],
        "license": "MIT"
      },
      "contracts/src/A5/interfaces/IAnswerNFT.sol": {
        "keccak256": "0x6dbbf6e73f62d6ab2c2935453636f1632bee60127517c776aed25c6be90dc28c",
        "urls": [
          "bzz-raw://4f4c78d5eb44852b34f5c50a5abf85228097670ac2846ed7d696dc54232a0b72",
          "dweb:/ipfs/QmbGwsmSPYPG66ZCZTwLrdaH74zvXuQ32A47B6U1y6FNMg"
        ],
        "license": "MIT"
      },
      "contracts/src/A5/interfaces/SAnswerNFT.sol": {
        "keccak256": "0x4859ac0482e3eaab0d6a6b48b2356f40c1a4a34921f82d3d82710c088f93ba38",
        "urls": [
          "bzz-raw://705f11608a5595df911e4aea957ecc62bb31b6c65232e8cd11a035a69c4e6604",
          "dweb:/ipfs/QmemEDjDRHQNRMEEH5zNJMjCqfMEWJDm6tqHZSW16EbrbW"
        ],
        "license": "MIT"
      },
      "contracts/src/A5/utils/YourNFT.sol": {
        "keccak256": "0x47efc09e3d80102f8064c2c4b28d0d14d7d2175b081061919c0deba7d009b099",
        "urls": [
          "bzz-raw://15903b24301c2a9ee105baebe281456dcbc1e3e184684a8baf6870ebebb81667",
          "dweb:/ipfs/QmRZUHW7UKVNJGg4pcHezfSra9Gs1DSTLRkYEby8D79jQe"
        ],
        "license": "MIT"
      },
      "test/Q5/QuestionNFT.t.sol": {
        "keccak256": "0x0e4641eabc3e049a032bf5e2618086415c3aaa00fa29062fb52a26210bad98b4",
        "urls": [
          "bzz-raw://f3803aa34796d42cd35c21e2674a98ddf5d8e0e3b47e95f82130e9e556a4c96c",
          "dweb:/ipfs/QmUwiHnKxp4FTyJsTveNhkNHnACEqCh5w8oAi8G3Q7pJL2"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x4c1915908e867ed8ed9fe731dff0e1d4980f5a11a1fd1894f2800b2ae2070154",
        "urls": [
          "bzz-raw://c9d7f9295364406115e820a14be670e54603f00fc9474093613409743db53749",
          "dweb:/ipfs/QmNjUUo9DK6xnfLjXYPc3qUznJv2PmSbaEXZCyyGRf5v5V"
        ],
        "license": "GPL-3.0-or-later"
      },
      "util/lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xdb05fd11858f232b8b5c6c9175229bdd061c277c34f13b0bdc64d333bcbd2617",
        "urls": [
          "bzz-raw://08ae865564d9c1fa1012b61db77a2da2844ac1ae0a216b16c9fe9ab65ddf80af",
          "dweb:/ipfs/QmfFfmkjb2Qfc5dPJvwQgjTMbeQ12dTPFeAQ8Gb944U44g"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x3c536209b4d4e1879adc4d91b12e237985f0f8f91e71828dacd8fca3bdf2fa99",
        "urls": [
          "bzz-raw://65adfc61088d242dbab8faa738d104005531e3a52ed993329b54fa7ee45e53ab",
          "dweb:/ipfs/QmP1d4thtELTT2vup4XmrCSKXZ91Eq756pgKq1z5hq2NGP"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/Vm.sol": {
        "keccak256": "0xdd9f518aade851117d3ca3122cae6ed413a8b8355d43d69db336e94da3214a96",
        "urls": [
          "bzz-raw://939ede17edec5c78176379839f4c68851b1316e8f5789efb2f01cbdae09b88ef",
          "dweb:/ipfs/QmYiBBb7Nyuse7HoEFkCeauUwcpef9S33ozZYDqXCEXEtH"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "util/lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/Q5/QuestionNFT.t.sol",
    "id": 2362,
    "exportedSymbols": {
      "AnswerNFT": [
        475
      ],
      "DSTest": [
        5160
      ],
      "QuestionNFT": [
        2361
      ],
      "SAnswerNFT": [
        512
      ],
      "StdAssertions": [
        6634
      ],
      "StdChains": [
        7328
      ],
      "StdCheats": [
        9579
      ],
      "StdInvariant": [
        9869
      ],
      "StdStorage": [
        10619
      ],
      "StdStyle": [
        13263
      ],
      "StdUtils": [
        14070
      ],
      "Test": [
        14119
      ],
      "TestBase": [
        5220
      ],
      "Vm": [
        15439
      ],
      "YourNFT": [
        574
      ],
      "console": [
        23503
      ],
      "console2": [
        31599
      ],
      "stdError": [
        9645
      ],
      "stdJson": [
        10445
      ],
      "stdMath": [
        10587
      ],
      "stdStorage": [
        12052
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2722:27",
    "nodes": [
      {
        "id": 2134,
        "nodeType": "PragmaDirective",
        "src": "32:24:27",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 2135,
        "nodeType": "ImportDirective",
        "src": "58:28:27",
        "nodes": [],
        "absolutePath": "util/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2362,
        "sourceUnit": 14120,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 2137,
        "nodeType": "ImportDirective",
        "src": "87:59:27",
        "nodes": [],
        "absolutePath": "contracts/src/A5/AnswerNFT.sol",
        "file": "contracts/src/A5/AnswerNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2362,
        "sourceUnit": 476,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2136,
              "name": "AnswerNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 475,
              "src": "96:9:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2139,
        "nodeType": "ImportDirective",
        "src": "147:72:27",
        "nodes": [],
        "absolutePath": "contracts/src/A5/interfaces/SAnswerNFT.sol",
        "file": "contracts/src/A5/interfaces/SAnswerNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2362,
        "sourceUnit": 513,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2138,
              "name": "SAnswerNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 512,
              "src": "156:10:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2141,
        "nodeType": "ImportDirective",
        "src": "220:61:27",
        "nodes": [],
        "absolutePath": "contracts/src/A5/utils/YourNFT.sol",
        "file": "contracts/src/A5/utils/YourNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2362,
        "sourceUnit": 575,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2140,
              "name": "YourNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 574,
              "src": "229:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2361,
        "nodeType": "ContractDefinition",
        "src": "282:2472:27",
        "nodes": [
          {
            "id": 2148,
            "nodeType": "VariableDeclaration",
            "src": "330:22:27",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "yourContract",
            "nameLocation": "340:12:27",
            "scope": 2361,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AnswerNFT_$475",
              "typeString": "contract AnswerNFT"
            },
            "typeName": {
              "id": 2147,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2146,
                "name": "AnswerNFT",
                "nameLocations": [
                  "330:9:27"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 475,
                "src": "330:9:27"
              },
              "referencedDeclaration": 475,
              "src": "330:9:27",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AnswerNFT_$475",
                "typeString": "contract AnswerNFT"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2150,
            "nodeType": "VariableDeclaration",
            "src": "358:27:27",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "yourContractAddress",
            "nameLocation": "366:19:27",
            "scope": 2361,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2149,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "358:7:27",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 2168,
            "nodeType": "FunctionDefinition",
            "src": "392:124:27",
            "nodes": [],
            "body": {
              "id": 2167,
              "nodeType": "Block",
              "src": "416:100:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2153,
                      "name": "yourContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2148,
                      "src": "426:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AnswerNFT_$475",
                        "typeString": "contract AnswerNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 2156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "441:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AnswerNFT_$475_$",
                          "typeString": "function () returns (contract AnswerNFT)"
                        },
                        "typeName": {
                          "id": 2155,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2154,
                            "name": "AnswerNFT",
                            "nameLocations": [
                              "445:9:27"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 475,
                            "src": "445:9:27"
                          },
                          "referencedDeclaration": 475,
                          "src": "445:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        }
                      },
                      "id": 2157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "441:15:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AnswerNFT_$475",
                        "typeString": "contract AnswerNFT"
                      }
                    },
                    "src": "426:30:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AnswerNFT_$475",
                      "typeString": "contract AnswerNFT"
                    }
                  },
                  "id": 2159,
                  "nodeType": "ExpressionStatement",
                  "src": "426:30:27"
                },
                {
                  "expression": {
                    "id": 2165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2160,
                      "name": "yourContractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2150,
                      "src": "466:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2163,
                          "name": "yourContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "496:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        ],
                        "id": 2162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "488:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 2161,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "488:7:27",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "488:21:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "466:43:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2166,
                  "nodeType": "ExpressionStatement",
                  "src": "466:43:27"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "401:5:27",
            "parameters": {
              "id": 2151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:27"
            },
            "returnParameters": {
              "id": 2152,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:0:27"
            },
            "scope": 2361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2360,
            "nodeType": "FunctionDefinition",
            "src": "737:2015:27",
            "nodes": [],
            "body": {
              "id": 2359,
              "nodeType": "Block",
              "src": "767:1985:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2174,
                      "mutability": "mutable",
                      "name": "vars",
                      "nameLocation": "789:4:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 2359,
                      "src": "777:16:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                        "typeString": "struct SAnswerNFT.Vars"
                      },
                      "typeName": {
                        "id": 2173,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2172,
                          "name": "Vars",
                          "nameLocations": [
                            "777:4:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 511,
                          "src": "777:4:27"
                        },
                        "referencedDeclaration": 511,
                        "src": "777:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vars_$511_storage_ptr",
                          "typeString": "struct SAnswerNFT.Vars"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2175,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "777:16:27"
                },
                {
                  "assignments": [
                    2178
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2178,
                      "mutability": "mutable",
                      "name": "nft",
                      "nameLocation": "812:3:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 2359,
                      "src": "804:11:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_YourNFT_$574",
                        "typeString": "contract YourNFT"
                      },
                      "typeName": {
                        "id": 2177,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2176,
                          "name": "YourNFT",
                          "nameLocations": [
                            "804:7:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 574,
                          "src": "804:7:27"
                        },
                        "referencedDeclaration": 574,
                        "src": "804:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YourNFT_$574",
                          "typeString": "contract YourNFT"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2183,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "818:11:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_YourNFT_$574_$",
                        "typeString": "function () returns (contract YourNFT)"
                      },
                      "typeName": {
                        "id": 2180,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2179,
                          "name": "YourNFT",
                          "nameLocations": [
                            "822:7:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 574,
                          "src": "822:7:27"
                        },
                        "referencedDeclaration": 574,
                        "src": "822:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_YourNFT_$574",
                          "typeString": "contract YourNFT"
                        }
                      }
                    },
                    "id": 2182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "818:13:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_YourNFT_$574",
                      "typeString": "contract YourNFT"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "804:27:27"
                },
                {
                  "body": {
                    "id": 2203,
                    "nodeType": "Block",
                    "src": "929:91:27",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2195,
                                  "name": "yourContract",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2148,
                                  "src": "964:12:27",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AnswerNFT_$475",
                                    "typeString": "contract AnswerNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AnswerNFT_$475",
                                    "typeString": "contract AnswerNFT"
                                  }
                                ],
                                "id": 2194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "956:7:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2193,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "956:7:27",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "956:21:27",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 2190,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2178,
                              "src": "943:3:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_YourNFT_$574",
                                "typeString": "contract YourNFT"
                              }
                            },
                            "id": 2192,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "947:8:27",
                            "memberName": "mintItem",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 564,
                            "src": "943:12:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) external returns (uint256)"
                            }
                          },
                          "id": 2197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "943:35:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2198,
                        "nodeType": "ExpressionStatement",
                        "src": "943:35:27"
                      },
                      {
                        "id": 2202,
                        "nodeType": "UncheckedBlock",
                        "src": "992:18:27",
                        "statements": [
                          {
                            "expression": {
                              "id": 2200,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "1004:3:27",
                              "subExpression": {
                                "id": 2199,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2185,
                                "src": "1006:1:27",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 2201,
                            "nodeType": "ExpressionStatement",
                            "src": "1004:3:27"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2187,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2185,
                      "src": "919:1:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 2188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "923:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "919:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2204,
                  "initializationExpression": {
                    "assignments": [
                      2185
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2185,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "916:1:27",
                        "nodeType": "VariableDeclaration",
                        "scope": 2204,
                        "src": "908:9:27",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2184,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "908:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2186,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "908:9:27"
                  },
                  "nodeType": "ForStatement",
                  "src": "904:116:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2210,
                            "name": "nft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2178,
                            "src": "1108:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_YourNFT_$574",
                              "typeString": "contract YourNFT"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_YourNFT_$574",
                              "typeString": "contract YourNFT"
                            }
                          ],
                          "id": 2209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1100:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2208,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1100:7:27",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1100:12:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2205,
                        "name": "yourContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "1080:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AnswerNFT_$475",
                          "typeString": "contract AnswerNFT"
                        }
                      },
                      "id": 2207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1093:6:27",
                      "memberName": "setNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 399,
                      "src": "1080:19:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1080:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2213,
                  "nodeType": "ExpressionStatement",
                  "src": "1080:33:27"
                },
                {
                  "expression": {
                    "id": 2222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 2214,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2174,
                          "src": "1178:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                            "typeString": "struct SAnswerNFT.Vars memory"
                          }
                        },
                        "id": 2217,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1183:5:27",
                        "memberName": "alice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 503,
                        "src": "1178:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                          "typeString": "struct SAnswerNFT.Person memory"
                        }
                      },
                      "id": 2218,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1189:4:27",
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 495,
                      "src": "1178:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "416c696365",
                          "id": 2220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1205:7:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          },
                          "value": "Alice"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                            "typeString": "literal_string \"Alice\""
                          }
                        ],
                        "id": 2219,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8746,
                        "src": "1196:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 2221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1196:17:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1178:35:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2223,
                  "nodeType": "ExpressionStatement",
                  "src": "1178:35:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2227,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "1231:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2228,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1236:5:27",
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 503,
                          "src": "1231:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2229,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1242:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "1231:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 2230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1248:7:27",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2224,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "1223:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2226,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1226:4:27",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15161,
                      "src": "1223:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1223:33:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2232,
                  "nodeType": "ExpressionStatement",
                  "src": "1223:33:27"
                },
                {
                  "expression": {
                    "id": 2241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 2233,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2174,
                          "src": "1317:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                            "typeString": "struct SAnswerNFT.Vars memory"
                          }
                        },
                        "id": 2236,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1322:3:27",
                        "memberName": "bob",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 506,
                        "src": "1317:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                          "typeString": "struct SAnswerNFT.Person memory"
                        }
                      },
                      "id": 2237,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1326:4:27",
                      "memberName": "addr",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 495,
                      "src": "1317:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "426f62",
                          "id": 2239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1342:5:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          },
                          "value": "Bob"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                            "typeString": "literal_string \"Bob\""
                          }
                        ],
                        "id": 2238,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8746,
                        "src": "1333:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 2240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1333:15:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1317:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2242,
                  "nodeType": "ExpressionStatement",
                  "src": "1317:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2246,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "1366:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2247,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1371:3:27",
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 506,
                          "src": "1366:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1375:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "1366:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 2249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1381:7:27",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 2243,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "1358:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1361:4:27",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15161,
                      "src": "1358:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 2250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1358:31:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2251,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:31:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2255,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "1453:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1458:5:27",
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 503,
                          "src": "1453:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2257,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1464:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "1453:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2252,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "1444:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1447:5:27",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15132,
                      "src": "1444:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1444:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2259,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:25:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2260,
                          "name": "yourContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "1526:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        },
                        "id": 2262,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1539:14:27",
                        "memberName": "buyBoosterPack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 442,
                        "src": "1526:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 2264,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 2263,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1561:7:27",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1526:43:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 2265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2266,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:45:27"
                },
                {
                  "expression": {
                    "id": 2276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2267,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "1616:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                          "typeString": "struct SAnswerNFT.Vars memory"
                        }
                      },
                      "id": 2269,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1621:7:27",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 508,
                      "src": "1616:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 2272,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2174,
                              "src": "1645:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                                "typeString": "struct SAnswerNFT.Vars memory"
                              }
                            },
                            "id": 2273,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1650:5:27",
                            "memberName": "alice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 503,
                            "src": "1645:10:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                              "typeString": "struct SAnswerNFT.Person memory"
                            }
                          },
                          "id": 2274,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1656:4:27",
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 495,
                          "src": "1645:15:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2270,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2178,
                          "src": "1631:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_YourNFT_$574",
                            "typeString": "contract YourNFT"
                          }
                        },
                        "id": 2271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1635:9:27",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32891,
                        "src": "1631:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1631:30:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1616:45:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2277,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:45:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2279,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2174,
                          "src": "1727:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                            "typeString": "struct SAnswerNFT.Vars memory"
                          }
                        },
                        "id": 2280,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1732:7:27",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 508,
                        "src": "1727:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1741:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 2278,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5351,
                        5376,
                        5389,
                        5405,
                        5447,
                        5489,
                        5531,
                        5568,
                        5605,
                        5642,
                        3694,
                        3719,
                        3749,
                        3774,
                        3833,
                        3858,
                        3888,
                        3913,
                        5013,
                        5048
                      ],
                      "referencedDeclaration": 3888,
                      "src": "1718:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1718:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2283,
                  "nodeType": "ExpressionStatement",
                  "src": "1718:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2287,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "1804:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2288,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1809:3:27",
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 506,
                          "src": "1804:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2289,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1813:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "1804:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2284,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "1795:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1798:5:27",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15132,
                      "src": "1795:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1795:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2291,
                  "nodeType": "ExpressionStatement",
                  "src": "1795:23:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2292,
                          "name": "yourContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "1878:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        },
                        "id": 2294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1891:14:27",
                        "memberName": "buyBoosterPack",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 442,
                        "src": "1878:27:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$__$returns$__$",
                          "typeString": "function () payable external"
                        }
                      },
                      "id": 2296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 2295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1913:7:27",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1878:43:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$__$returns$__$value",
                        "typeString": "function () payable external"
                      }
                    },
                    "id": 2297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:45:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2298,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:45:27"
                },
                {
                  "expression": {
                    "id": 2308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2299,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "2051:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                          "typeString": "struct SAnswerNFT.Vars memory"
                        }
                      },
                      "id": 2301,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2056:7:27",
                      "memberName": "balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 508,
                      "src": "2051:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "expression": {
                              "id": 2304,
                              "name": "vars",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2174,
                              "src": "2080:4:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                                "typeString": "struct SAnswerNFT.Vars memory"
                              }
                            },
                            "id": 2305,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2085:3:27",
                            "memberName": "bob",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 506,
                            "src": "2080:8:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                              "typeString": "struct SAnswerNFT.Person memory"
                            }
                          },
                          "id": 2306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2089:4:27",
                          "memberName": "addr",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 495,
                          "src": "2080:13:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 2302,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2178,
                          "src": "2066:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_YourNFT_$574",
                            "typeString": "contract YourNFT"
                          }
                        },
                        "id": 2303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2070:9:27",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32891,
                        "src": "2066:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 2307,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2066:28:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2051:43:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2309,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:43:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2311,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2174,
                          "src": "2158:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                            "typeString": "struct SAnswerNFT.Vars memory"
                          }
                        },
                        "id": 2312,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2163:7:27",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 508,
                        "src": "2158:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35",
                        "id": 2313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2172:1:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        },
                        "value": "5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_5_by_1",
                          "typeString": "int_const 5"
                        }
                      ],
                      "id": 2310,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        5351,
                        5376,
                        5389,
                        5405,
                        5447,
                        5489,
                        5531,
                        5568,
                        5605,
                        5642,
                        3694,
                        3719,
                        3749,
                        3774,
                        3833,
                        3858,
                        3888,
                        3913,
                        5013,
                        5048
                      ],
                      "referencedDeclaration": 3888,
                      "src": "2149:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 2314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2315,
                  "nodeType": "ExpressionStatement",
                  "src": "2149:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2319,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "2238:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2320,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2243:5:27",
                          "memberName": "alice",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 503,
                          "src": "2238:10:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2321,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2249:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "2238:15:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2316,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "2229:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2232:5:27",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15132,
                      "src": "2229:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2323,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:25:27"
                },
                {
                  "expression": {
                    "id": 2330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 2324,
                        "name": "vars",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2174,
                        "src": "2344:4:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                          "typeString": "struct SAnswerNFT.Vars memory"
                        }
                      },
                      "id": 2326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2349:8:27",
                      "memberName": "canEnter",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 510,
                      "src": "2344:13:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 2327,
                          "name": "yourContract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2148,
                          "src": "2360:12:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AnswerNFT_$475",
                            "typeString": "contract AnswerNFT"
                          }
                        },
                        "id": 2328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2373:22:27",
                        "memberName": "canEnterByOriginHolder",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 474,
                        "src": "2360:35:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                          "typeString": "function () view external returns (bool)"
                        }
                      },
                      "id": 2329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2360:37:27",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2344:53:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2331,
                  "nodeType": "ExpressionStatement",
                  "src": "2344:53:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2333,
                          "name": "vars",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2174,
                          "src": "2418:4:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                            "typeString": "struct SAnswerNFT.Vars memory"
                          }
                        },
                        "id": 2334,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2423:8:27",
                        "memberName": "canEnter",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 510,
                        "src": "2418:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2332,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3643,
                        3664
                      ],
                      "referencedDeclaration": 3643,
                      "src": "2407:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 2335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2407:25:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2336,
                  "nodeType": "ExpressionStatement",
                  "src": "2407:25:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "expression": {
                            "id": 2340,
                            "name": "vars",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2174,
                            "src": "2493:4:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vars_$511_memory_ptr",
                              "typeString": "struct SAnswerNFT.Vars memory"
                            }
                          },
                          "id": 2341,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2498:3:27",
                          "memberName": "bob",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 506,
                          "src": "2493:8:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Person_$500_memory_ptr",
                            "typeString": "struct SAnswerNFT.Person memory"
                          }
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2502:4:27",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 495,
                        "src": "2493:13:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2337,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "2484:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2487:5:27",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15132,
                      "src": "2484:8:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2484:23:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2344,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:23:27"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "596f7520646f6e2774206861766520746865206669727374204e46542e",
                            "id": 2350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2665:31:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_7af66bd1a13e1df6bb3eefdd5270c95695b0aebcf219e88bcfd7a61755287e4b",
                              "typeString": "literal_string \"You don't have the first NFT.\""
                            },
                            "value": "You don't have the first NFT."
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_7af66bd1a13e1df6bb3eefdd5270c95695b0aebcf219e88bcfd7a61755287e4b",
                              "typeString": "literal_string \"You don't have the first NFT.\""
                            }
                          ],
                          "expression": {
                            "id": 2348,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2648:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 2349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2652:12:27",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2648:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 2351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2648:49:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 2345,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5213,
                        "src": "2632:2:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$15439",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 2347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2635:12:27",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15173,
                      "src": "2632:15:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 2352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2632:66:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2353,
                  "nodeType": "ExpressionStatement",
                  "src": "2632:66:27"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2354,
                        "name": "yourContract",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2148,
                        "src": "2708:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AnswerNFT_$475",
                          "typeString": "contract AnswerNFT"
                        }
                      },
                      "id": 2356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2721:22:27",
                      "memberName": "canEnterByOriginHolder",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 474,
                      "src": "2708:35:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                        "typeString": "function () view external returns (bool)"
                      }
                    },
                    "id": 2357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2708:37:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2358,
                  "nodeType": "ExpressionStatement",
                  "src": "2708:37:27"
                }
              ]
            },
            "documentation": {
              "id": 2169,
              "nodeType": "StructuredDocumentation",
              "src": "526:206:27",
              "text": "Q-5. ERC-721とapprovalとプログラマブルな送金と多様なコントラクト\nガチャガチャを通して、ERC-721の内容とコントラクトへの送金を学ぶ"
            },
            "functionSelector": "0972e292",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Q5_NFT",
            "nameLocation": "746:11:27",
            "parameters": {
              "id": 2170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "757:2:27"
            },
            "returnParameters": {
              "id": 2171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "767:0:27"
            },
            "scope": 2361,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2142,
              "name": "Test",
              "nameLocations": [
                "306:4:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 14119,
              "src": "306:4:27"
            },
            "id": 2143,
            "nodeType": "InheritanceSpecifier",
            "src": "306:4:27"
          },
          {
            "baseName": {
              "id": 2144,
              "name": "SAnswerNFT",
              "nameLocations": [
                "312:10:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 512,
              "src": "312:10:27"
            },
            "id": 2145,
            "nodeType": "InheritanceSpecifier",
            "src": "312:10:27"
          }
        ],
        "canonicalName": "QuestionNFT",
        "contractDependencies": [
          475,
          574
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2361,
          512,
          14119,
          5220,
          5217,
          14070,
          9869,
          9579,
          8900,
          7328,
          6634,
          5160
        ],
        "name": "QuestionNFT",
        "nameLocation": "291:11:27",
        "scope": 2362,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 27
}