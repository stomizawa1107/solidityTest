{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "buyBoosterPack",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "canEnterByOriginHolder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nft",
          "type": "address"
        }
      ],
      "name": "setNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604052600160025534801561001557600080fd5b5061001f33610024565b610074565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6104e1806100836000396000f3fe6080604052600436106100555760003560e01c806301eb528a1461005a578063715018a6146100845780638da5cb5b1461009b578063a3006abf146100c3578063f2fde38b146100cb578063f56e9c66146100eb575b600080fd5b34801561006657600080fd5b5061006f61010b565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100996101ef565b005b3480156100a757600080fd5b506000546040516001600160a01b03909116815260200161007b565b610099610203565b3480156100d757600080fd5b506100996100e6366004610421565b6102bf565b3480156100f757600080fd5b50610099610106366004610421565b610338565b600180546040516331a9108f60e11b815260009283926001600160a01b031691636352211e916101419160040190815260200190565b602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610445565b6001600160a01b0316336001600160a01b0316146101e75760405162461bcd60e51b815260206004820152601d60248201527f596f7520646f6e2774206861766520746865206669727374204e46542e00000060448201526064015b60405180910390fd5b506001919050565b6101f7610362565b61020160006103bc565b565b60006102176702c68af0bb14000034610462565b905060005b818110156102bb576001546002546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050600280549250905060006102a383610484565b919050555080806102b390610484565b91505061021c565b5050565b6102c7610362565b6001600160a01b03811661032c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101de565b610335816103bc565b50565b610340610362565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461033557600080fd5b60006020828403121561043357600080fd5b813561043e8161040c565b9392505050565b60006020828403121561045757600080fd5b815161043e8161040c565b60008261047f57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016104a457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ee10f2be9903ba1e6eb53f921e73be3a7d449afbf6eb390ab0a4a299d6f54bae64736f6c63430008130033",
    "sourceMap": "297:1388:9:-:0;;;740:1;714:27;;297:1388;;;;;;;;;-1:-1:-1;936:32:46;719:10:57;936:18:46;:32::i;:::-;297:1388:9;;2433:187:46;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:46;;;-1:-1:-1;;;;;;2541:17:46;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;297:1388:9:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100555760003560e01c806301eb528a1461005a578063715018a6146100845780638da5cb5b1461009b578063a3006abf146100c3578063f2fde38b146100cb578063f56e9c66146100eb575b600080fd5b34801561006657600080fd5b5061006f61010b565b60405190151581526020015b60405180910390f35b34801561009057600080fd5b506100996101ef565b005b3480156100a757600080fd5b506000546040516001600160a01b03909116815260200161007b565b610099610203565b3480156100d757600080fd5b506100996100e6366004610421565b6102bf565b3480156100f757600080fd5b50610099610106366004610421565b610338565b600180546040516331a9108f60e11b815260009283926001600160a01b031691636352211e916101419160040190815260200190565b602060405180830381865afa15801561015e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101829190610445565b6001600160a01b0316336001600160a01b0316146101e75760405162461bcd60e51b815260206004820152601d60248201527f596f7520646f6e2774206861766520746865206669727374204e46542e00000060448201526064015b60405180910390fd5b506001919050565b6101f7610362565b61020160006103bc565b565b60006102176702c68af0bb14000034610462565b905060005b818110156102bb576001546002546040516323b872dd60e01b815230600482015233602482015260448101919091526001600160a01b03909116906323b872dd90606401600060405180830381600087803b15801561027a57600080fd5b505af115801561028e573d6000803e3d6000fd5b5050600280549250905060006102a383610484565b919050555080806102b390610484565b91505061021c565b5050565b6102c7610362565b6001600160a01b03811661032c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101de565b610335816103bc565b50565b610340610362565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146102015760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101de565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461033557600080fd5b60006020828403121561043357600080fd5b813561043e8161040c565b9392505050565b60006020828403121561045757600080fd5b815161043e8161040c565b60008261047f57634e487b7160e01b600052601260045260246000fd5b500490565b6000600182016104a457634e487b7160e01b600052601160045260246000fd5b506001019056fea2646970667358221220ee10f2be9903ba1e6eb53f921e73be3a7d449afbf6eb390ab0a4a299d6f54bae64736f6c63430008130033",
    "sourceMap": "297:1388:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:316;;;;;;;;;;;;;:::i;:::-;;;179:14:66;;172:22;154:41;;142:2;127:18;1367:316:9;;;;;;;;1831:101:46;;;;;;;;;;;;;:::i;:::-;;1201:85;;;;;;;;;;-1:-1:-1;1247:7:46;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:46;;;352:51:66;;340:2;325:18;1201:85:46;206:203:66;816:429:9;;;:::i;2081:198:46:-;;;;;;;;;;-1:-1:-1;2081:198:46;;;;;:::i;:::-;;:::i;625:83:9:-;;;;;;;;;;-1:-1:-1;625:83:9;;;;;:::i;:::-;;:::i;1367:316::-;1514:3;;;:14;;-1:-1:-1;;;1514:14:9;;1431:4;;;;-1:-1:-1;;;;;1514:3:9;;:11;;:14;;;;956:25:66;;;944:2;929:18;;802:185;1514:14:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1500:28:9;:10;-1:-1:-1;;;;;1500:28:9;;1497:161;;1552:39;;-1:-1:-1;;;1552:39:9;;1450:2:66;1552:39:9;;;1432:21:66;1489:2;1469:18;;;1462:30;1528:31;1508:18;;;1501:59;1577:18;;1552:39:9;;;;;;;;1497:161;-1:-1:-1;1643:4:9;1674:2;1367:316;-1:-1:-1;1367:316:9:o;1831:101:46:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;816:429:9:-;941:12;956:21;968:9;956;:21;:::i;:::-;941:36;;990:6;986:253;1006:7;1002:1;:11;986:253;;;1140:3;;1182:15;;1140:58;;-1:-1:-1;;;1140:58:9;;1165:4;1140:58;;;2068:34:66;1171:10:9;2118:18:66;;;2111:43;2170:18;;;2163:34;;;;-1:-1:-1;;;;;1140:3:9;;;;:16;;2003:18:66;;1140:58:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1212:15:9;:17;;;-1:-1:-1;1212:15:9;-1:-1:-1;1212:15:9;:17;;;:::i;:::-;;;;;;1015:3;;;;;:::i;:::-;;;;986:253;;;;866:379;816:429::o;2081:198:46:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:46;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:46;;2647:2:66;2161:73:46::1;::::0;::::1;2629:21:66::0;2686:2;2666:18;;;2659:30;2725:34;2705:18;;;2698:62;-1:-1:-1;;;2776:18:66;;;2769:36;2822:19;;2161:73:46::1;2445:402:66::0;2161:73:46::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;625:83:9:-;1094:13:46;:11;:13::i;:::-;682:3:9::1;:19:::0;;-1:-1:-1;;;;;;682:19:9::1;-1:-1:-1::0;;;;;682:19:9;;;::::1;::::0;;;::::1;::::0;;625:83::o;1359:130:46:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:46;719:10:57;1422:23:46;1414:68;;;;-1:-1:-1;;;1414:68:46;;3054:2:66;1414:68:46;;;3036:21:66;;;3073:18;;;3066:30;3132:34;3112:18;;;3105:62;3184:18;;1414:68:46;2852:356:66;2433:187:46;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:46;;;-1:-1:-1;;;;;;2541:17:46;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;414:131:66:-;-1:-1:-1;;;;;489:31:66;;479:42;;469:70;;535:1;532;525:12;550:247;609:6;662:2;650:9;641:7;637:23;633:32;630:52;;;678:1;675;668:12;630:52;717:9;704:23;736:31;761:5;736:31;:::i;:::-;786:5;550:247;-1:-1:-1;;;550:247:66:o;992:251::-;1062:6;1115:2;1103:9;1094:7;1090:23;1086:32;1083:52;;;1131:1;1128;1121:12;1083:52;1163:9;1157:16;1182:31;1207:5;1182:31;:::i;1606:217::-;1646:1;1672;1662:132;;1716:10;1711:3;1707:20;1704:1;1697:31;1751:4;1748:1;1741:15;1779:4;1776:1;1769:15;1662:132;-1:-1:-1;1808:9:66;;1606:217::o;2208:232::-;2247:3;2268:17;;;2265:140;;2327:10;2322:3;2318:20;2315:1;2308:31;2362:4;2359:1;2352:15;2390:4;2387:1;2380:15;2265:140;-1:-1:-1;2432:1:66;2421:13;;2208:232::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "buyBoosterPack()": "a3006abf",
    "canEnterByOriginHolder()": "01eb528a",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setNFT(address)": "f56e9c66",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"buyBoosterPack\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"canEnterByOriginHolder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nft\",\"type\":\"address\"}],\"name\":\"setNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"buyBoosterPack()\":{\"details\":\"NFT\\u306e\\u30ac\\u30c1\\u30e3\\u30ac\\u30c1\\u30e3\\u3092\\u56de\\u3059\\u95a2\\u6570\"},\"canEnterByOriginHolder()\":{\"details\":\"\\u6700\\u521d\\u306bNFT\\u306e\\u30ac\\u30c1\\u30e3\\u30ac\\u30c1\\u30e3\\u3092\\u56de\\u3057\\u305f\\u8005\\u306b\\u5165\\u5834\\u306e\\u6a29\\u5229\\u3092\\u4ed8\\u4e0e\\u3059\\u308b\\u95a2\\u6570\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setNFT(address)\":{\"details\":\"NFTAddress\\u3092\\u8a2d\\u5b9a\\u3059\\u308b\\u95a2\\u6570\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/A5/AnswerNFT.sol\":\"AnswerNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=util/lib/openzeppelin-contracts/\",\":ds-test/=util/lib/forge-std/lib/ds-test/src/\",\":forge-std/=util/lib/forge-std/src/\",\":openzeppelin-contracts/=util/lib/openzeppelin-contracts/\",\":scal-std/=util/lib/scal-std/src/\",\":src/=contracts/src/\",\":test/=test/\"]},\"sources\":{\"contracts/src/A5/AnswerNFT.sol\":{\"keccak256\":\"0xb8926c67e1239e17e3f147291ac3152895b21b2e7faf655173921b61891caae8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01cec5044fe9f9c3992c50c6219d589a4eaa3731d9c6c2ab319a3eb225a2f092\",\"dweb:/ipfs/QmVHCsQjwUzM9GZjiMebJhCB6NzS7DGCVwEU47GvF16MW3\"]},\"contracts/src/A5/interfaces/IAnswerNFT.sol\":{\"keccak256\":\"0x6dbbf6e73f62d6ab2c2935453636f1632bee60127517c776aed25c6be90dc28c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f4c78d5eb44852b34f5c50a5abf85228097670ac2846ed7d696dc54232a0b72\",\"dweb:/ipfs/QmbGwsmSPYPG66ZCZTwLrdaH74zvXuQ32A47B6U1y6FNMg\"]},\"contracts/src/A5/interfaces/SAnswerNFT.sol\":{\"keccak256\":\"0x4859ac0482e3eaab0d6a6b48b2356f40c1a4a34921f82d3d82710c088f93ba38\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://705f11608a5595df911e4aea957ecc62bb31b6c65232e8cd11a035a69c4e6604\",\"dweb:/ipfs/QmemEDjDRHQNRMEEH5zNJMjCqfMEWJDm6tqHZSW16EbrbW\"]},\"util/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "buyBoosterPack"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "canEnterByOriginHolder",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nft",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setNFT"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "buyBoosterPack()": {
            "details": "NFTのガチャガチャを回す関数"
          },
          "canEnterByOriginHolder()": {
            "details": "最初にNFTのガチャガチャを回した者に入場の権利を付与する関数"
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setNFT(address)": {
            "details": "NFTAddressを設定する関数"
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=util/lib/openzeppelin-contracts/",
        ":ds-test/=util/lib/forge-std/lib/ds-test/src/",
        ":forge-std/=util/lib/forge-std/src/",
        ":openzeppelin-contracts/=util/lib/openzeppelin-contracts/",
        ":scal-std/=util/lib/scal-std/src/",
        ":src/=contracts/src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/A5/AnswerNFT.sol": "AnswerNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/A5/AnswerNFT.sol": {
        "keccak256": "0xb8926c67e1239e17e3f147291ac3152895b21b2e7faf655173921b61891caae8",
        "urls": [
          "bzz-raw://01cec5044fe9f9c3992c50c6219d589a4eaa3731d9c6c2ab319a3eb225a2f092",
          "dweb:/ipfs/QmVHCsQjwUzM9GZjiMebJhCB6NzS7DGCVwEU47GvF16MW3"
        ],
        "license": "MIT"
      },
      "contracts/src/A5/interfaces/IAnswerNFT.sol": {
        "keccak256": "0x6dbbf6e73f62d6ab2c2935453636f1632bee60127517c776aed25c6be90dc28c",
        "urls": [
          "bzz-raw://4f4c78d5eb44852b34f5c50a5abf85228097670ac2846ed7d696dc54232a0b72",
          "dweb:/ipfs/QmbGwsmSPYPG66ZCZTwLrdaH74zvXuQ32A47B6U1y6FNMg"
        ],
        "license": "MIT"
      },
      "contracts/src/A5/interfaces/SAnswerNFT.sol": {
        "keccak256": "0x4859ac0482e3eaab0d6a6b48b2356f40c1a4a34921f82d3d82710c088f93ba38",
        "urls": [
          "bzz-raw://705f11608a5595df911e4aea957ecc62bb31b6c65232e8cd11a035a69c4e6604",
          "dweb:/ipfs/QmemEDjDRHQNRMEEH5zNJMjCqfMEWJDm6tqHZSW16EbrbW"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/A5/AnswerNFT.sol",
    "id": 476,
    "exportedSymbols": {
      "AnswerNFT": [
        475
      ],
      "Context": [
        34213
      ],
      "IAnswerNFT": [
        491
      ],
      "IERC165": [
        35013
      ],
      "IERC721": [
        33816
      ],
      "Ownable": [
        31875
      ],
      "SAnswerNFT": [
        512
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1653:9",
    "nodes": [
      {
        "id": 370,
        "nodeType": "PragmaDirective",
        "src": "32:24:9",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 371,
        "nodeType": "ImportDirective",
        "src": "58:52:9",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 476,
        "sourceUnit": 31876,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 372,
        "nodeType": "ImportDirective",
        "src": "111:58:9",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 476,
        "sourceUnit": 33817,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 374,
        "nodeType": "ImportDirective",
        "src": "170:62:9",
        "nodes": [],
        "absolutePath": "contracts/src/A5/interfaces/SAnswerNFT.sol",
        "file": "src/A5/interfaces/SAnswerNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 476,
        "sourceUnit": 513,
        "symbolAliases": [
          {
            "foreign": {
              "id": 373,
              "name": "SAnswerNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 512,
              "src": "179:10:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 376,
        "nodeType": "ImportDirective",
        "src": "233:62:9",
        "nodes": [],
        "absolutePath": "contracts/src/A5/interfaces/IAnswerNFT.sol",
        "file": "src/A5/interfaces/IAnswerNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 476,
        "sourceUnit": 492,
        "symbolAliases": [
          {
            "foreign": {
              "id": 375,
              "name": "IAnswerNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 491,
              "src": "242:10:9",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 475,
        "nodeType": "ContractDefinition",
        "src": "297:1388:9",
        "nodes": [
          {
            "id": 384,
            "nodeType": "VariableDeclaration",
            "src": "547:11:9",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 381,
              "nodeType": "StructuredDocumentation",
              "src": "345:197:9",
              "text": "Q-5. ERC-721とapprovalとプログラマブルな送金と多様なコントラクト\nガチャを通して、ERC-721の内容とコントラクトへの送金を学ぶ"
            },
            "mutability": "mutable",
            "name": "nft",
            "nameLocation": "555:3:9",
            "scope": 475,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC721_$33816",
              "typeString": "contract IERC721"
            },
            "typeName": {
              "id": 383,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 382,
                "name": "IERC721",
                "nameLocations": [
                  "547:7:9"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 33816,
                "src": "547:7:9"
              },
              "referencedDeclaration": 33816,
              "src": "547:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC721_$33816",
                "typeString": "contract IERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 399,
            "nodeType": "FunctionDefinition",
            "src": "625:83:9",
            "nodes": [],
            "body": {
              "id": 398,
              "nodeType": "Block",
              "src": "672:36:9",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 392,
                      "name": "nft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 384,
                      "src": "682:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$33816",
                        "typeString": "contract IERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 394,
                          "name": "_nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 387,
                          "src": "696:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 393,
                        "name": "IERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33816,
                        "src": "688:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC721_$33816_$",
                          "typeString": "type(contract IERC721)"
                        }
                      },
                      "id": 395,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "688:13:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC721_$33816",
                        "typeString": "contract IERC721"
                      }
                    },
                    "src": "682:19:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC721_$33816",
                      "typeString": "contract IERC721"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "682:19:9"
                }
              ]
            },
            "baseFunctions": [
              482
            ],
            "documentation": {
              "id": 385,
              "nodeType": "StructuredDocumentation",
              "src": "565:55:9",
              "text": " @dev NFTAddressを設定する関数"
            },
            "functionSelector": "f56e9c66",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 390,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 389,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "662:9:9"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31794,
                  "src": "662:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "662:9:9"
              }
            ],
            "name": "setNFT",
            "nameLocation": "634:6:9",
            "parameters": {
              "id": 388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 387,
                  "mutability": "mutable",
                  "name": "_nft",
                  "nameLocation": "649:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 399,
                  "src": "641:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 386,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "640:14:9"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "672:0:9"
            },
            "scope": 475,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 402,
            "nodeType": "VariableDeclaration",
            "src": "714:27:9",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_boosterCounter",
            "nameLocation": "722:15:9",
            "scope": 475,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "714:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 401,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "740:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 442,
            "nodeType": "FunctionDefinition",
            "src": "816:429:9",
            "nodes": [],
            "body": {
              "id": 441,
              "nodeType": "Block",
              "src": "866:379:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    408
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 408,
                      "mutability": "mutable",
                      "name": "loopnum",
                      "nameLocation": "946:7:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 441,
                      "src": "941:12:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 407,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "941:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 413,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 412,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 409,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "956:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "960:5:9",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "956:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "302e32",
                      "id": 411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "968:9:9",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_200000000000000000_by_1",
                        "typeString": "int_const 200000000000000000"
                      },
                      "value": "0.2"
                    },
                    "src": "956:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "941:36:9"
                },
                {
                  "body": {
                    "id": 439,
                    "nodeType": "Block",
                    "src": "1027:212:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 429,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1165:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_AnswerNFT_$475",
                                    "typeString": "contract AnswerNFT"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_AnswerNFT_$475",
                                    "typeString": "contract AnswerNFT"
                                  }
                                ],
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1157:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 427,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1157:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1157:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 431,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1171:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 432,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1175:6:9",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1171:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 433,
                              "name": "_boosterCounter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 402,
                              "src": "1182:15:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 424,
                              "name": "nft",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "1140:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC721_$33816",
                                "typeString": "contract IERC721"
                              }
                            },
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1144:12:9",
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33781,
                            "src": "1140:16:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1140:58:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 435,
                        "nodeType": "ExpressionStatement",
                        "src": "1140:58:9"
                      },
                      {
                        "expression": {
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "1212:17:9",
                          "subExpression": {
                            "id": 436,
                            "name": "_boosterCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 402,
                            "src": "1212:15:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 438,
                        "nodeType": "ExpressionStatement",
                        "src": "1212:17:9"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 418,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "1002:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 419,
                      "name": "loopnum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "1006:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1002:11:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 440,
                  "initializationExpression": {
                    "assignments": [
                      415
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 415,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "995:1:9",
                        "nodeType": "VariableDeclaration",
                        "scope": 440,
                        "src": "990:6:9",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 414,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "990:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 417,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "999:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "990:10:9"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1015:3:9",
                      "subExpression": {
                        "id": 421,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 415,
                        "src": "1015:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 423,
                    "nodeType": "ExpressionStatement",
                    "src": "1015:3:9"
                  },
                  "nodeType": "ForStatement",
                  "src": "986:253:9"
                }
              ]
            },
            "baseFunctions": [
              485
            ],
            "documentation": {
              "id": 403,
              "nodeType": "StructuredDocumentation",
              "src": "748:63:9",
              "text": " @dev NFTのガチャガチャを回す関数"
            },
            "functionSelector": "a3006abf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyBoosterPack",
            "nameLocation": "825:14:9",
            "overrides": {
              "id": 405,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "857:8:9"
            },
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "839:2:9"
            },
            "returnParameters": {
              "id": 406,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:9"
            },
            "scope": 475,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 474,
            "nodeType": "FunctionDefinition",
            "src": "1367:316:9",
            "nodes": [],
            "body": {
              "id": 473,
              "nodeType": "Block",
              "src": "1437:246:9",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    450
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 450,
                      "mutability": "mutable",
                      "name": "Ok",
                      "nameLocation": "1477:2:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 473,
                      "src": "1472:7:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 449,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "1472:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 452,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1482:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1472:15:9"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 453,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1500:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1504:6:9",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1500:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "31",
                          "id": 457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1526:1:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 455,
                          "name": "nft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 384,
                          "src": "1514:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC721_$33816",
                            "typeString": "contract IERC721"
                          }
                        },
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1518:7:9",
                        "memberName": "ownerOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 33749,
                        "src": "1514:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) view external returns (address)"
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1514:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1500:28:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 469,
                    "nodeType": "Block",
                    "src": "1624:34:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 465,
                            "name": "Ok",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 450,
                            "src": "1638:2:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1643:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1638:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 468,
                        "nodeType": "ExpressionStatement",
                        "src": "1638:9:9"
                      }
                    ]
                  },
                  "id": 470,
                  "nodeType": "IfStatement",
                  "src": "1497:161:9",
                  "trueBody": {
                    "id": 464,
                    "nodeType": "Block",
                    "src": "1538:64:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "596f7520646f6e2774206861766520746865206669727374204e46542e",
                              "id": 461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1559:31:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_7af66bd1a13e1df6bb3eefdd5270c95695b0aebcf219e88bcfd7a61755287e4b",
                                "typeString": "literal_string \"You don't have the first NFT.\""
                              },
                              "value": "You don't have the first NFT."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_7af66bd1a13e1df6bb3eefdd5270c95695b0aebcf219e88bcfd7a61755287e4b",
                                "typeString": "literal_string \"You don't have the first NFT.\""
                              }
                            ],
                            "id": 460,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "1552:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1552:39:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 463,
                        "nodeType": "ExpressionStatement",
                        "src": "1552:39:9"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 471,
                    "name": "Ok",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 450,
                    "src": "1674:2:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 448,
                  "id": 472,
                  "nodeType": "Return",
                  "src": "1667:9:9"
                }
              ]
            },
            "baseFunctions": [
              490
            ],
            "documentation": {
              "id": 443,
              "nodeType": "StructuredDocumentation",
              "src": "1251:111:9",
              "text": " @dev 最初にNFTのガチャガチャを回した者に入場の権利を付与する関数"
            },
            "functionSelector": "01eb528a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canEnterByOriginHolder",
            "nameLocation": "1376:22:9",
            "overrides": {
              "id": 445,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1408:8:9"
            },
            "parameters": {
              "id": 444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:2:9"
            },
            "returnParameters": {
              "id": 448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 447,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 474,
                  "src": "1431:4:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 446,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1431:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1430:6:9"
            },
            "scope": 475,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 377,
              "name": "IAnswerNFT",
              "nameLocations": [
                "319:10:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 491,
              "src": "319:10:9"
            },
            "id": 378,
            "nodeType": "InheritanceSpecifier",
            "src": "319:10:9"
          },
          {
            "baseName": {
              "id": 379,
              "name": "Ownable",
              "nameLocations": [
                "331:7:9"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31875,
              "src": "331:7:9"
            },
            "id": 380,
            "nodeType": "InheritanceSpecifier",
            "src": "331:7:9"
          }
        ],
        "canonicalName": "AnswerNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          475,
          31875,
          34213,
          491
        ],
        "name": "AnswerNFT",
        "nameLocation": "306:9:9",
        "scope": 476,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 9
}