{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "testers",
          "type": "address[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "v",
          "type": "uint8"
        },
        {
          "internalType": "bytes32",
          "name": "r",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "s",
          "type": "bytes32"
        }
      ],
      "name": "permit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "191:415:19:-:0;;;240:363;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;396:4;1868::50;2464:602:61;;;;;;;;;;;;;-1:-1:-1;;;2464:602:61;;;365:4:19;1976:113:47;;;;;;;;;;;;;-1:-1:-1;;;1976:113:47;;;2050:5;2042;:13;;;;;;:::i;:::-;-1:-1:-1;2065:7:47;:17;2075:7;2065;:17;:::i;:::-;-1:-1:-1;;2550:22:61;;;;;;;2606:25;;;;;;;;;2787;;;;2822:31;;;;2882:13;2863:32;;;;-1:-1:-1;3642:73:61;;2660:117;3642:73;;;7375:25:66;;;7416:18;;;7409:34;;;;-1:-1:-1;7459:18:66;;7452:34;;;;7502:18;;;;7495:34;;;;3709:4:61;7545:19:66;;;7538:61;;;3642:73:61;;;;;;;;;;7347:19:66;;;;3642:73:61;;;3632:84;;;;;;;2905:85;;3000:28;;;;3038:21;;-1:-1:-1;;430:14:19;;-1:-1:-1;454:143:19::2;477:3;473:1;:7;454:143;;;497:58;503:7;511:1;503:10;;;;;;;;:::i;:::-;;;;;;;551:3;538:10;:8;;;:10;;:::i;:::-;532:16;::::0;:2:::2;:16;:::i;:::-;515:34;::::0;:13;:34:::2;:::i;:::-;:39;;;;:::i;:::-;497:5;:58::i;:::-;581:3;;454:143;;;;406:197;240:363:::0;;;191:415;;3091:91:47;3173:2;;3091:91::o;8567:535::-;-1:-1:-1;;;;;8650:21:47;;8642:65;;;;-1:-1:-1;;;8642:65:47;;7812:2:66;8642:65:47;;;7794:21:66;7851:2;7831:18;;;7824:30;7890:33;7870:18;;;7863:61;7941:18;;8642:65:47;;;;;;;;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:47;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;8246:25:66;;;8999:37:47;;8219:18:66;8999:37:47;;;;;;;8567:535;;:::o;12180:121::-;;;;:::o;14:127:66:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:275;217:2;211:9;282:2;263:13;;-1:-1:-1;;259:27:66;247:40;;-1:-1:-1;;;;;302:34:66;;338:22;;;299:62;296:88;;;364:18;;:::i;:::-;400:2;393:22;146:275;;-1:-1:-1;146:275:66:o;426:893::-;491:5;544:3;537:4;529:6;525:17;521:27;511:55;;562:1;559;552:12;511:55;585:13;;617:4;-1:-1:-1;;;;;633:26:66;;630:52;;;662:18;;:::i;:::-;708:2;705:1;701:10;731:28;755:2;751;747:11;731:28;:::i;:::-;793:15;;;863;;;859:24;;;824:12;;;;895:15;;;892:35;;;923:1;920;913:12;892:35;959:2;951:6;947:15;936:26;;971:319;987:6;982:3;979:15;971:319;;;1054:10;;-1:-1:-1;;;;;1097:31:66;;1087:42;;1077:140;;1171:1;1200:2;1196;1189:14;1077:140;1230:18;;1004:12;;;;1268;;;;971:319;;;1308:5;426:893;-1:-1:-1;;;;;;;426:893:66:o;1324:1156::-;1447:6;1455;1463;1516:2;1504:9;1495:7;1491:23;1487:32;1484:52;;;1532:1;1529;1522:12;1484:52;1559:16;;-1:-1:-1;;;;;1624:14:66;;;1621:34;;;1651:1;1648;1641:12;1621:34;1689:6;1678:9;1674:22;1664:32;;1734:7;1727:4;1723:2;1719:13;1715:27;1705:55;;1756:1;1753;1746:12;1705:55;1785:2;1779:9;1807:2;1803;1800:10;1797:36;;;1813:18;;:::i;:::-;1852:4;1878:53;1921:2;1902:13;;-1:-1:-1;;1898:27:66;1894:36;;1878:53;:::i;:::-;1954:2;1947:5;1940:17;1994:7;1989:2;1984;1980;1976:11;1972:20;1969:33;1966:53;;;2015:1;2012;2005:12;1966:53;2037:1;2047:128;2061:2;2058:1;2055:9;2047:128;;;2148:10;;;2144:19;;2138:26;2118:13;;;2114:22;;2107:58;2072:10;;2047:128;;;-1:-1:-1;2216:1:66;2195:14;;;2191:23;;2184:34;;;;2267:18;;2261:25;2332:2;2317:18;;2311:25;2199:5;;-1:-1:-1;2261:25:66;-1:-1:-1;2311:25:66;-1:-1:-1;2348:16:66;;;2345:36;;;2377:1;2374;2367:12;2345:36;;2400:74;2466:7;2455:8;2444:9;2440:24;2400:74;:::i;:::-;2390:84;;;1324:1156;;;;;:::o;2485:380::-;2564:1;2560:12;;;;2607;;;2628:61;;2682:4;2674:6;2670:17;2660:27;;2628:61;2735:2;2727:6;2724:14;2704:18;2701:38;2698:161;;2781:10;2776:3;2772:20;2769:1;2762:31;2816:4;2813:1;2806:15;2844:4;2841:1;2834:15;2698:161;;2485:380;;;:::o;2996:545::-;3098:2;3093:3;3090:11;3087:448;;;3134:1;3159:5;3155:2;3148:17;3204:4;3200:2;3190:19;3274:2;3262:10;3258:19;3255:1;3251:27;3245:4;3241:38;3310:4;3298:10;3295:20;3292:47;;;-1:-1:-1;3333:4:66;3292:47;3388:2;3383:3;3379:12;3376:1;3372:20;3366:4;3362:31;3352:41;;3443:82;3461:2;3454:5;3451:13;3443:82;;;3506:17;;;3487:1;3476:13;3443:82;;;3447:3;;;2996:545;;;:::o;3717:1352::-;3837:10;;-1:-1:-1;;;;;3859:30:66;;3856:56;;;3892:18;;:::i;:::-;3921:97;4011:6;3971:38;4003:4;3997:11;3971:38;:::i;:::-;3965:4;3921:97;:::i;:::-;4073:4;;4137:2;4126:14;;4154:1;4149:663;;;;4856:1;4873:6;4870:89;;;-1:-1:-1;4925:19:66;;;4919:26;4870:89;-1:-1:-1;;3674:1:66;3670:11;;;3666:24;3662:29;3652:40;3698:1;3694:11;;;3649:57;4972:81;;4119:944;;4149:663;2943:1;2936:14;;;2980:4;2967:18;;-1:-1:-1;;4185:20:66;;;4303:236;4317:7;4314:1;4311:14;4303:236;;;4406:19;;;4400:26;4385:42;;4498:27;;;;4466:1;4454:14;;;;4333:19;;4303:236;;;4307:3;4567:6;4558:7;4555:19;4552:201;;;4628:19;;;4622:26;-1:-1:-1;;4711:1:66;4707:14;;;4723:3;4703:24;4699:37;4695:42;4680:58;4665:74;;4552:201;-1:-1:-1;;;;;4799:1:66;4783:14;;;4779:22;4766:36;;-1:-1:-1;3717:1352:66:o;5074:127::-;5135:10;5130:3;5126:20;5123:1;5116:31;5166:4;5163:1;5156:15;5190:4;5187:1;5180:15;5206:127;5267:10;5262:3;5258:20;5255:1;5248:31;5298:4;5295:1;5288:15;5322:4;5319:1;5312:15;5338:422;5427:1;5470:5;5427:1;5484:270;5505:7;5495:8;5492:21;5484:270;;;5564:4;5560:1;5556:6;5552:17;5546:4;5543:27;5540:53;;;5573:18;;:::i;:::-;5623:7;5613:8;5609:22;5606:55;;;5643:16;;;;5606:55;5722:22;;;;5682:15;;;;5484:270;;;5488:3;5338:422;;;;;:::o;5765:806::-;5814:5;5844:8;5834:80;;-1:-1:-1;5885:1:66;5899:5;;5834:80;5933:4;5923:76;;-1:-1:-1;5970:1:66;5984:5;;5923:76;6015:4;6033:1;6028:59;;;;6101:1;6096:130;;;;6008:218;;6028:59;6058:1;6049:10;;6072:5;;;6096:130;6133:3;6123:8;6120:17;6117:43;;;6140:18;;:::i;:::-;-1:-1:-1;;6196:1:66;6182:16;;6211:5;;6008:218;;6310:2;6300:8;6297:16;6291:3;6285:4;6282:13;6278:36;6272:2;6262:8;6259:16;6254:2;6248:4;6245:12;6241:35;6238:77;6235:159;;;-1:-1:-1;6347:19:66;;;6379:5;;6235:159;6426:34;6451:8;6445:4;6426:34;:::i;:::-;6496:6;6492:1;6488:6;6484:19;6475:7;6472:32;6469:58;;;6507:18;;:::i;:::-;6545:20;;-1:-1:-1;5765:806:66;;;;;:::o;6576:140::-;6634:5;6663:47;6704:4;6694:8;6690:19;6684:4;6663:47;:::i;:::-;6654:56;6576:140;-1:-1:-1;;;6576:140:66:o;6721:168::-;6794:9;;;6825;;6842:15;;;6836:22;;6822:37;6812:71;;6863:18;;:::i;6894:217::-;6934:1;6960;6950:132;;7004:10;6999:3;6995:20;6992:1;6985:31;7039:4;7036:1;7029:15;7067:4;7064:1;7057:15;6950:132;-1:-1:-1;7096:9:66;;6894:217::o;7970:125::-;8035:9;;;8056:10;;;8053:36;;;8069:18;;:::i;8100:177::-;191:415:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d7146101c3578063a9059cbb146101d6578063d505accf146101e9578063dd62ed3e146101fe57600080fd5b806370a082311461017f5780637ecebe00146101a857806395d89b41146101bb57600080fd5b806323b872dd116100c857806323b872dd14610142578063313ce567146101555780633644e51514610164578063395093511461016c57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f7610211565b6040516101049190610c74565b60405180910390f35b61012061011b366004610cde565b6102a3565b6040519015158152602001610104565b6002545b604051908152602001610104565b610120610150366004610d08565b6102bd565b60405160128152602001610104565b6101346102e1565b61012061017a366004610cde565b6102f0565b61013461018d366004610d44565b6001600160a01b031660009081526020819052604090205490565b6101346101b6366004610d44565b610312565b6100f7610330565b6101206101d1366004610cde565b61033f565b6101206101e4366004610cde565b6103bf565b6101fc6101f7366004610d66565b6103cd565b005b61013461020c366004610dd9565b610531565b60606003805461022090610e0c565b80601f016020809104026020016040519081016040528092919081815260200182805461024c90610e0c565b80156102995780601f1061026e57610100808354040283529160200191610299565b820191906000526020600020905b81548152906001019060200180831161027c57829003601f168201915b5050505050905090565b6000336102b181858561055c565b60019150505b92915050565b6000336102cb858285610680565b6102d68585856106fa565b506001949350505050565b60006102eb61089e565b905090565b6000336102b18185856103038383610531565b61030d9190610e40565b61055c565b6001600160a01b0381166000908152600560205260408120546102b7565b60606004805461022090610e0c565b6000338161034d8286610531565b9050838110156103b25760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102d6828686840361055c565b6000336102b18185856106fa565b8342111561041d5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016103a9565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c988888861044c8c6109c5565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006104a7826109ed565b905060006104b782878787610a3b565b9050896001600160a01b0316816001600160a01b03161461051a5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016103a9565b6105258a8a8a61055c565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166105be5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103a9565b6001600160a01b03821661061f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103a9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600061068c8484610531565b905060001981146106f457818110156106e75760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103a9565b6106f4848484840361055c565b50505050565b6001600160a01b03831661075e5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103a9565b6001600160a01b0382166107c05760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103a9565b6001600160a01b038316600090815260208190526040902054818110156108385760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103a9565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36106f4565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156108f757507f000000000000000000000000000000000000000000000000000000000000000046145b1561092157507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b60006102b76109fa61089e565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610a4c87878787610a63565b91509150610a5981610b27565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610a9a5750600090506003610b1e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610aee573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610b1757600060019250925050610b1e565b9150600090505b94509492505050565b6000816004811115610b3b57610b3b610e61565b03610b435750565b6001816004811115610b5757610b57610e61565b03610ba45760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016103a9565b6002816004811115610bb857610bb8610e61565b03610c055760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016103a9565b6003816004811115610c1957610c19610e61565b03610c715760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016103a9565b50565b600060208083528351808285015260005b81811015610ca157858101830151858201604001528201610c85565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114610cd957600080fd5b919050565b60008060408385031215610cf157600080fd5b610cfa83610cc2565b946020939093013593505050565b600080600060608486031215610d1d57600080fd5b610d2684610cc2565b9250610d3460208501610cc2565b9150604084013590509250925092565b600060208284031215610d5657600080fd5b610d5f82610cc2565b9392505050565b600080600080600080600060e0888a031215610d8157600080fd5b610d8a88610cc2565b9650610d9860208901610cc2565b95506040880135945060608801359350608088013560ff81168114610dbc57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610dec57600080fd5b610df583610cc2565b9150610e0360208401610cc2565b90509250929050565b600181811c90821680610e2057607f821691505b6020821081036109e757634e487b7160e01b600052602260045260246000fd5b808201808211156102b757634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052602160045260246000fdfea264697066735822122083cd082d70f5666e8c0820939edfd161cbd02aa8963ba85119fb45976b54d10964736f6c63430008130033",
    "sourceMap": "191:415:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:66;;1162:22;1144:41;;1132:2;1117:18;4431:197:47;1004:187:66;3242:106:47;3329:12;;3242:106;;;1342:25:66;;;1330:2;1315:18;3242:106:47;1196:177:66;5190:286:47;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;1853:36:66;;1841:2;1826:18;3091:91:47;1711:184:66;2879:113:50;;;:::i;5871:234:47:-;;;;;;:::i;:::-;;:::i;3406:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:47;3480:7;3506:18;;;;;;;;;;;;3406:125;2629:126:50;;;;;;:::i;:::-;;:::i;2365:102:47:-;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;1942:626:50:-;;;;;;:::i;:::-;;:::i;:::-;;3974:149:47;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:57;4568:32:47;719:10:57;4584:7:47;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;;:::o;5190:286::-;5317:4;719:10:57;5373:38:47;5389:4;719:10:57;5404:6:47;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:47;;5190:286;-1:-1:-1;;;;5190:286:47:o;2879:113:50:-;2939:7;2965:20;:18;:20::i;:::-;2958:27;;2879:113;:::o;5871:234:47:-;5959:4;719:10:57;6013:64:47;719:10:57;6029:7:47;6066:10;6038:25;719:10:57;6029:7:47;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;2629:126:50:-;-1:-1:-1;;;;;2724:14:50;;2698:7;2724:14;;;:7;:14;;;;;918::58;2724:24:50;827:112:58;2365:102:47;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:57;6685:4:47;6766:25;719:10:57;6783:7:47;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:47;;4050:2:66;6801:85:47;;;4032:21:66;4089:2;4069:18;;;4062:30;4128:34;4108:18;;;4101:62;-1:-1:-1;;;4179:18:66;;;4172:35;4224:19;;6801:85:47;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:57;3860:28:47;719:10:57;3877:2:47;3881:6;3860:9;:28::i;1942:626:50:-;2177:8;2158:15;:27;;2150:69;;;;-1:-1:-1;;;2150:69:50;;4456:2:66;2150:69:50;;;4438:21:66;4495:2;4475:18;;;4468:30;4534:31;4514:18;;;4507:59;4583:18;;2150:69:50;4254:353:66;2150:69:50;2230:18;1137:95;2290:5;2297:7;2306:5;2313:16;2323:5;2313:9;:16::i;:::-;2261:79;;;;;;4899:25:66;;;;-1:-1:-1;;;;;4998:15:66;;;4978:18;;;4971:43;5050:15;;;;5030:18;;;5023:43;5082:18;;;5075:34;5125:19;;;5118:35;5169:19;;;5162:35;;;4871:19;;2261:79:50;;;;;;;;;;;;2251:90;;;;;;2230:111;;2352:12;2367:28;2384:10;2367:16;:28::i;:::-;2352:43;;2406:14;2423:28;2437:4;2443:1;2446;2449;2423:13;:28::i;:::-;2406:45;;2479:5;-1:-1:-1;;;;;2469:15:50;:6;-1:-1:-1;;;;;2469:15:50;;2461:58;;;;-1:-1:-1;;;2461:58:50;;5410:2:66;2461:58:50;;;5392:21:66;5449:2;5429:18;;;5422:30;5488:32;5468:18;;;5461:60;5538:18;;2461:58:50;5208:354:66;2461:58:50;2530:31;2539:5;2546:7;2555:5;2530:8;:31::i;:::-;2140:428;;;1942:626;;;;;;;:::o;3974:149:47:-;-1:-1:-1;;;;;4089:18:47;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:47;;10627:68;;;;-1:-1:-1;;;10627:68:47;;5769:2:66;10627:68:47;;;5751:21:66;5808:2;5788:18;;;5781:30;5847:34;5827:18;;;5820:62;-1:-1:-1;;;5898:18:66;;;5891:34;5942:19;;10627:68:47;5567:400:66;10627:68:47;-1:-1:-1;;;;;10713:21:47;;10705:68;;;;-1:-1:-1;;;10705:68:47;;6174:2:66;10705:68:47;;;6156:21:66;6213:2;6193:18;;;6186:30;6252:34;6232:18;;;6225:62;-1:-1:-1;;;6303:18:66;;;6296:32;6345:19;;10705:68:47;5972:398:66;10705:68:47;-1:-1:-1;;;;;10784:18:47;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1342:25:66;;;10835:32:47;;1315:18:66;10835:32:47;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:47;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:47;;6577:2:66;11404:68:47;;;6559:21:66;6616:2;6596:18;;;6589:30;6655:31;6635:18;;;6628:59;6704:18;;11404:68:47;6375:353:66;11404:68:47;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:47;;7591:68;;;;-1:-1:-1;;;7591:68:47;;6935:2:66;7591:68:47;;;6917:21:66;6974:2;6954:18;;;6947:30;7013:34;6993:18;;;6986:62;-1:-1:-1;;;7064:18:66;;;7057:35;7109:19;;7591:68:47;6733:401:66;7591:68:47;-1:-1:-1;;;;;7677:16:47;;7669:64;;;;-1:-1:-1;;;7669:64:47;;7341:2:66;7669:64:47;;;7323:21:66;7380:2;7360:18;;;7353:30;7419:34;7399:18;;;7392:62;-1:-1:-1;;;7470:18:66;;;7463:33;7513:19;;7669:64:47;7139:399:66;7669:64:47;-1:-1:-1;;;;;7815:15:47;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:47;;7745:2:66;7840:72:47;;;7727:21:66;7784:2;7764:18;;;7757:30;7823:34;7803:18;;;7796:62;-1:-1:-1;;;7874:18:66;;;7867:36;7920:19;;7840:72:47;7543:402:66;7840:72:47;-1:-1:-1;;;;;7946:15:47;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1342:25:66;;;8161:13:47;;8210:26;;1315:18:66;8210:26:47;;;;;;;8247:37;12180:121;3152:308:61;3205:7;3236:4;-1:-1:-1;;;;;3245:12:61;3228:29;;:66;;;;;3278:16;3261:13;:33;3228:66;3224:230;;;-1:-1:-1;3317:24:61;;3152:308::o;3224:230::-;-1:-1:-1;3642:73:61;;;3401:10;3642:73;;;;8209:25:66;;;;3413:12:61;8250:18:66;;;8243:34;3427:15:61;8293:18:66;;;8286:34;3686:13:61;8336:18:66;;;8329:34;3709:4:61;8379:19:66;;;;8372:61;;;;3642:73:61;;;;;;;;;;8181:19:66;;;;3642:73:61;;;3632:84;;;;;;2879:113:50:o;3123:203::-;-1:-1:-1;;;;;3243:14:50;;3183:15;3243:14;;;:7;:14;;;;;918::58;;1050:1;1032:19;;;;918:14;3302:17:50;3200:126;3123:203;;;:::o;4348:165:61:-;4425:7;4451:55;4473:20;:18;:20::i;:::-;4495:10;8470:57:60;;-1:-1:-1;;;8470:57:60;;;8702:27:66;8745:11;;;8738:27;;;8781:12;;;8774:28;;;8434:7:60;;8818:12:66;;8470:57:60;;;;;;;;;;;;8460:68;;;;;;8453:75;;8341:194;;;;;6696:270;6819:7;6839:17;6858:18;6880:25;6891:4;6897:1;6900;6903;6880:10;:25::i;:::-;6838:67;;;;6915:18;6927:5;6915:11;:18::i;:::-;-1:-1:-1;6950:9:60;6696:270;-1:-1:-1;;;;;6696:270:60:o;5069:1494::-;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:60;;-1:-1:-1;6221:30:60;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;9068:25:66;;;9141:4;9129:17;;9109:18;;;9102:45;;;;9163:18;;;9156:34;;;9206:18;;;9199:34;;;6374:24:60;;9040:19:66;;6374:24:60;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:60;;-1:-1:-1;;6374:24:60;;;-1:-1:-1;;;;;;;6412:20:60;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:60;;-1:-1:-1;5069:1494:60;;;;;;;;:::o;570:511::-;647:20;638:5;:29;;;;;;;;:::i;:::-;;634:441;;570:511;:::o;634:441::-;743:29;734:5;:38;;;;;;;;:::i;:::-;;730:345;;788:34;;-1:-1:-1;;;788:34:60;;9578:2:66;788:34:60;;;9560:21:66;9617:2;9597:18;;;9590:30;9656:26;9636:18;;;9629:54;9700:18;;788:34:60;9376:348:66;730:345:60;852:35;843:5;:44;;;;;;;;:::i;:::-;;839:236;;903:41;;-1:-1:-1;;;903:41:60;;9931:2:66;903:41:60;;;9913:21:66;9970:2;9950:18;;;9943:30;10009:33;9989:18;;;9982:61;10060:18;;903:41:60;9729:355:66;839:236:60;974:30;965:5;:39;;;;;;;;:::i;:::-;;961:114;;1020:44;;-1:-1:-1;;;1020:44:60;;10291:2:66;1020:44:60;;;10273:21:66;10330:2;10310:18;;;10303:30;10369:34;10349:18;;;10342:62;-1:-1:-1;;;10420:18:66;;;10413:32;10462:19;;1020:44:60;10089:398:66;961:114:60;570:511;:::o;14:548:66:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:66;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:66:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2082:186::-;2141:6;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2082:186;-1:-1:-1;;;2082:186:66:o;2273:693::-;2384:6;2392;2400;2408;2416;2424;2432;2485:3;2473:9;2464:7;2460:23;2456:33;2453:53;;;2502:1;2499;2492:12;2453:53;2525:29;2544:9;2525:29;:::i;:::-;2515:39;;2573:38;2607:2;2596:9;2592:18;2573:38;:::i;:::-;2563:48;;2658:2;2647:9;2643:18;2630:32;2620:42;;2709:2;2698:9;2694:18;2681:32;2671:42;;2763:3;2752:9;2748:19;2735:33;2808:4;2801:5;2797:16;2790:5;2787:27;2777:55;;2828:1;2825;2818:12;2777:55;2273:693;;;;-1:-1:-1;2273:693:66;;;;2851:5;2903:3;2888:19;;2875:33;;-1:-1:-1;2955:3:66;2940:19;;;2927:33;;2273:693;-1:-1:-1;;2273:693:66:o;2971:260::-;3039:6;3047;3100:2;3088:9;3079:7;3075:23;3071:32;3068:52;;;3116:1;3113;3106:12;3068:52;3139:29;3158:9;3139:29;:::i;:::-;3129:39;;3187:38;3221:2;3210:9;3206:18;3187:38;:::i;:::-;3177:48;;2971:260;;;;;:::o;3236:380::-;3315:1;3311:12;;;;3358;;;3379:61;;3433:4;3425:6;3421:17;3411:27;;3379:61;3486:2;3478:6;3475:14;3455:18;3452:38;3449:161;;3532:10;3527:3;3523:20;3520:1;3513:31;3567:4;3564:1;3557:15;3595:4;3592:1;3585:15;3621:222;3686:9;;;3707:10;;;3704:133;;;3759:10;3754:3;3750:20;3747:1;3740:31;3794:4;3791:1;3784:15;3822:4;3819:1;3812:15;9244:127;9305:10;9300:3;9296:20;9293:1;9286:31;9336:4;9333:1;9326:15;9360:4;9357:1;9350:15",
    "linkReferences": {},
    "immutableReferences": {
      "34829": [
        {
          "start": 2303,
          "length": 32
        }
      ],
      "34831": [
        {
          "start": 2261,
          "length": 32
        }
      ],
      "34833": [
        {
          "start": 2219,
          "length": 32
        }
      ],
      "34835": [
        {
          "start": 2386,
          "length": 32
        }
      ],
      "34837": [
        {
          "start": 2423,
          "length": 32
        }
      ],
      "34839": [
        {
          "start": 2344,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DOMAIN_SEPARATOR()": "3644e515",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "nonces(address)": "7ecebe00",
    "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"testers\",\"type\":\"address[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/src/A6/utils/YourCurrencyPermit.sol\":\"YourCurrencyPermit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=util/lib/openzeppelin-contracts/\",\":ds-test/=util/lib/forge-std/lib/ds-test/src/\",\":forge-std/=util/lib/forge-std/src/\",\":openzeppelin-contracts/=util/lib/openzeppelin-contracts/\",\":scal-std/=util/lib/scal-std/src/\",\":src/=contracts/src/\",\":test/=test/\"]},\"sources\":{\"contracts/src/A6/utils/YourCurrencyPermit.sol\":{\"keccak256\":\"0x547ea5a7cf6969b6ca79f786c94fbdf3b68f02d0e9a34ffa1a7e1c8f6a53ef17\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c0767292e0e4f0cfa458cc3db2f246d48a8d182fe597e1aaa25b9077812891f\",\"dweb:/ipfs/QmbH2rC9kdrTH8qzDb9s3F3SWXhANzKsUU2H8QkCjs6WoG\"]},\"util/lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7\",\"dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV\"]},\"util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"util/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"util/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"util/lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f\",\"dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS\"]},\"util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "initialSupply",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "testers",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "deadline",
              "type": "uint256"
            },
            {
              "internalType": "uint8",
              "name": "v",
              "type": "uint8"
            },
            {
              "internalType": "bytes32",
              "name": "r",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "s",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "permit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "DOMAIN_SEPARATOR()": {
            "details": "See {IERC20Permit-DOMAIN_SEPARATOR}."
          },
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "nonces(address)": {
            "details": "See {IERC20Permit-nonces}."
          },
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
            "details": "See {IERC20Permit-permit}."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=util/lib/openzeppelin-contracts/",
        ":ds-test/=util/lib/forge-std/lib/ds-test/src/",
        ":forge-std/=util/lib/forge-std/src/",
        ":openzeppelin-contracts/=util/lib/openzeppelin-contracts/",
        ":scal-std/=util/lib/scal-std/src/",
        ":src/=contracts/src/",
        ":test/=test/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/src/A6/utils/YourCurrencyPermit.sol": "YourCurrencyPermit"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/src/A6/utils/YourCurrencyPermit.sol": {
        "keccak256": "0x547ea5a7cf6969b6ca79f786c94fbdf3b68f02d0e9a34ffa1a7e1c8f6a53ef17",
        "urls": [
          "bzz-raw://1c0767292e0e4f0cfa458cc3db2f246d48a8d182fe597e1aaa25b9077812891f",
          "dweb:/ipfs/QmbH2rC9kdrTH8qzDb9s3F3SWXhANzKsUU2H8QkCjs6WoG"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d",
        "urls": [
          "bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d",
          "dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol": {
        "keccak256": "0xd2dd6003a2dc02ab905fd405938322e510429d19ae6c07c2c683d70f13ab2f36",
        "urls": [
          "bzz-raw://124567a127176d5c1dfc6776c0964b5e8c0ccfa87468b644f1175775f3c140c7",
          "dweb:/ipfs/QmYg33x4W2xC1frf1Btw2bAvs1zox4Eq7Eq9qMkj1FQKNV"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Counters.sol": {
        "keccak256": "0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1",
        "urls": [
          "bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee",
          "dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/cryptography/EIP712.sol": {
        "keccak256": "0x948d8b2d18f38141ec78c5229d770d950ebc781ed3f44cc9e3ccbb9fded5846a",
        "urls": [
          "bzz-raw://7311ac950ed2d81f3ccf1784a926efbfc82a86dcb5c98d41eb3792c0cac63a2f",
          "dweb:/ipfs/QmRRwCUHewkPmehx8QRYENFoWyLNx8UEZGULxWYUeSZdTS"
        ],
        "license": "MIT"
      },
      "util/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/src/A6/utils/YourCurrencyPermit.sol",
    "id": 1281,
    "exportedSymbols": {
      "Context": [
        34213
      ],
      "Counters": [
        34287
      ],
      "ECDSA": [
        34823
      ],
      "EIP712": [
        34977
      ],
      "ERC20": [
        32462
      ],
      "ERC20Permit": [
        32737
      ],
      "IERC20": [
        32540
      ],
      "IERC20Metadata": [
        32565
      ],
      "IERC20Permit": [
        32773
      ],
      "Math": [
        35878
      ],
      "Ownable": [
        31875
      ],
      "Strings": [
        34462
      ],
      "YourCurrencyPermit": [
        1280
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:575:19",
    "nodes": [
      {
        "id": 1224,
        "nodeType": "PragmaDirective",
        "src": "32:24:19",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 1225,
        "nodeType": "ImportDirective",
        "src": "58:78:19",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1281,
        "sourceUnit": 32738,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1226,
        "nodeType": "ImportDirective",
        "src": "137:52:19",
        "nodes": [],
        "absolutePath": "util/lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1281,
        "sourceUnit": 31876,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1280,
        "nodeType": "ContractDefinition",
        "src": "191:415:19",
        "nodes": [
          {
            "id": 1279,
            "nodeType": "FunctionDefinition",
            "src": "240:363:19",
            "nodes": [],
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "406:197:19",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1246
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1246,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "424:3:19",
                      "nodeType": "VariableDeclaration",
                      "scope": 1278,
                      "src": "416:11:19",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1245,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "416:7:19",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1249,
                  "initialValue": {
                    "expression": {
                      "id": 1247,
                      "name": "testers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1235,
                      "src": "430:7:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[] memory"
                      }
                    },
                    "id": 1248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "438:6:19",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "430:14:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "416:28:19"
                },
                {
                  "body": {
                    "id": 1276,
                    "nodeType": "Block",
                    "src": "483:114:19",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 1258,
                                "name": "testers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1235,
                                "src": "503:7:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1260,
                              "indexExpression": {
                                "id": 1259,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1251,
                                "src": "511:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "503:10:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1267,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1261,
                                  "name": "initialSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1232,
                                  "src": "515:13:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1265,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "hexValue": "3130",
                                        "id": 1262,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "532:2:19",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10_by_1",
                                          "typeString": "int_const 10"
                                        },
                                        "value": "10"
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "**",
                                      "rightExpression": {
                                        "arguments": [],
                                        "expression": {
                                          "argumentTypes": [],
                                          "id": 1263,
                                          "name": "decimals",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31950,
                                          "src": "538:8:19",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
                                            "typeString": "function () view returns (uint8)"
                                          }
                                        },
                                        "id": 1264,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "nameLocations": [],
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "538:10:19",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "src": "532:16:19",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1266,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "531:18:19",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "515:34:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1268,
                                "name": "len",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1246,
                                "src": "551:3:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "515:39:19",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1257,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 32279,
                            "src": "497:5:19",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "497:58:19",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1271,
                        "nodeType": "ExpressionStatement",
                        "src": "497:58:19"
                      },
                      {
                        "id": 1275,
                        "nodeType": "UncheckedBlock",
                        "src": "569:18:19",
                        "statements": [
                          {
                            "expression": {
                              "id": 1273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "581:3:19",
                              "subExpression": {
                                "id": 1272,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1251,
                                "src": "583:1:19",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1274,
                            "nodeType": "ExpressionStatement",
                            "src": "581:3:19"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1254,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1251,
                      "src": "473:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1255,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1246,
                      "src": "477:3:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "473:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1277,
                  "initializationExpression": {
                    "assignments": [
                      1251
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1251,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "466:1:19",
                        "nodeType": "VariableDeclaration",
                        "scope": 1277,
                        "src": "458:9:19",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1250,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "458:7:19",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1253,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1252,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "470:1:19",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "458:13:19"
                  },
                  "nodeType": "ForStatement",
                  "src": "454:143:19"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1238,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1230,
                    "src": "365:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "hexValue": "31",
                    "id": 1239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "371:3:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
                      "typeString": "literal_string \"1\""
                    },
                    "value": "1"
                  }
                ],
                "id": 1240,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1237,
                  "name": "ERC20",
                  "nameLocations": [
                    "359:5:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32462,
                  "src": "359:5:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "359:16:19"
              },
              {
                "arguments": [
                  {
                    "id": 1242,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1230,
                    "src": "396:4:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1243,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1241,
                  "name": "ERC20Permit",
                  "nameLocations": [
                    "384:11:19"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32737,
                  "src": "384:11:19"
                },
                "nodeType": "ModifierInvocation",
                "src": "384:17:19"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1230,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "275:4:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "261:18:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1229,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "261:6:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1232,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nameLocation": "297:13:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "289:21:19",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "289:7:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1235,
                  "mutability": "mutable",
                  "name": "testers",
                  "nameLocation": "337:7:19",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "320:24:19",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1233,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "320:7:19",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1234,
                    "nodeType": "ArrayTypeName",
                    "src": "320:9:19",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "251:99:19"
            },
            "returnParameters": {
              "id": 1244,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:19"
            },
            "scope": 1280,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1227,
              "name": "ERC20Permit",
              "nameLocations": [
                "222:11:19"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32737,
              "src": "222:11:19"
            },
            "id": 1228,
            "nodeType": "InheritanceSpecifier",
            "src": "222:11:19"
          }
        ],
        "canonicalName": "YourCurrencyPermit",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1280,
          32737,
          34977,
          32773,
          32462,
          32565,
          32540,
          34213
        ],
        "name": "YourCurrencyPermit",
        "nameLocation": "200:18:19",
        "scope": 1281,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 19
}